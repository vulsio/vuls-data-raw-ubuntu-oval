{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.trusty:def:2024269350000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-26935 on Ubuntu 14.04 LTS (trusty) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: scsi:core: Fix unremoved procfs host directory regression Commit fc663711b944(\"scsi: core: Remove the /proc/scsi/${proc_name} directory earlier\") fixeda bug related to modules loading/unloading, by adding a call toscsi_proc_hostdir_rm() on scsi_remove_host(). But that led to a potentialduplicate call to the hostdir_rm() routine, since it's also called fromscsi_host_dev_release(). That triggered a regression report, which was thenfixed by commit be03df3d4bfe (\"scsi: core: Fix a procfs host directoryremoval regression\"). The fix just dropped the hostdir_rm() call fromdev_release(). But it happens that this proc directory is created onscsi_host_alloc(), and that function \"pairs\" with scsi_host_dev_release(),while scsi_remove_host() pairs with scsi_add_host(). In other words, itseems the reason for removing the proc directory on dev_release() was meantto cover cases in which a SCSI host structure was allocated, but the callto scsi_add_host() didn't happen. And that pattern happens to exist in someerror paths, for example. Syzkaller causes that by using USB raw gadgetdevice, error'ing on usb-storage driver, at usb_stor_probe2(). By checkingthat path, we can see that the BadDevice label leads to a scsi_host_put()after a SCSI host allocation, but there's no call to scsi_add_host() insuch path. That leads to messages like this in dmesg (and a leak of theSCSI host proc structure): usb-storage 4-1:87.51: USB Mass Storage devicedetected proc_dir_entry 'scsi/usb-storage' already registered WARNING: CPU:1 PID: 3519 at fs/proc/generic.c:377 proc_register+0x347/0x4e0fs/proc/generic.c:376 The proper fix seems to still callscsi_proc_hostdir_rm() on dev_release(), but guard that with the statecheck for SHOST_CREATED; there is even a comment in scsi_host_dev_release()detailing that: such conditional is meant for cases where the SCSI host wasallocated but there was no calls to {add,remove}_host(), like theusb-storage case. This is what we propose here and with that, the errorpath of usb-storage does not trigger the warning anymore.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 14.04 LTS"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-26935",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-26935"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-01 06:15:00 UTC",
			"cve": {
				"text": "CVE-2024-26935",
				"href": "https://ubuntu.com/security/CVE-2024-26935",
				"public": "20240501"
			},
			"public_date_at_usn": "2024-05-01 06:15:00 UTC",
			"ref": [
				"https://ubuntu.com/security/notices/USN-6816-1",
				"https://ubuntu.com/security/notices/USN-6817-1"
			]
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200747740000000",
						"comment": "linux package in trusty is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200747740000010",
						"comment": "linux-lts-xenial package in trusty is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200747740000020",
						"comment": "linux-aws package in trusty is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200747740000030",
						"comment": "linux-azure package in trusty is affected and may need fixing."
					}
				]
			}
		]
	}
}
