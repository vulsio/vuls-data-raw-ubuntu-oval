{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.trusty:def:2021475860000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2021-47586 on Ubuntu 14.04 LTS (trusty) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:net: stmmac: dwmac-rk: fix oob read in rk_gmac_setupKASAN reports an out-of-bounds read in rk_gmac_setup on the line:\twhile (ops->regs[i]) {This happens for most platforms since the regs flexible array member isempty, so the memory after the ops structure is being read here.  Itseems that mostly this happens to contain zero anyway, so we get luckyand everything still works.To avoid adding redundant data to nearly all the ops structures, add anew flag to indicate whether the regs field is valid and avoid this loopwhen it is not.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 14.04 LTS"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2021-47586",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2021-47586"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-06-20",
			"cve": {
				"text": "CVE-2021-47586",
				"href": "https://ubuntu.com/security/CVE-2021-47586",
				"public": "20240620"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200747740000000",
						"comment": "linux package in trusty is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200747740000010",
						"comment": "linux-lts-xenial package in trusty is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200747740000020",
						"comment": "linux-aws package in trusty is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200747740000030",
						"comment": "linux-azure package in trusty is affected and may need fixing."
					}
				]
			}
		]
	}
}
