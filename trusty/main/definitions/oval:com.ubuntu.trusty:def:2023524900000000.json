{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.trusty:def:2023524900000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2023-52490 on Ubuntu 14.04 LTS (trusty) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: mm:migrate: fix getting incorrect page mapping during page migration Whenrunning stress-ng testing, we found below kernel crash after a few hours:Unable to handle kernel NULL pointer dereference at virtual address0000000000000000 pc : dentry_name+0xd8/0x224 lr : pointer+0x22c/0x370 sp :ffff800025f134c0 ...... Call trace: dentry_name+0xd8/0x224pointer+0x22c/0x370 vsnprintf+0x1ec/0x730 vscnprintf+0x2c/0x60vprintk_store+0x70/0x234 vprintk_emit+0xe0/0x24c vprintk_default+0x3c/0x44vprintk_func+0x84/0x2d0 printk+0x64/0x88 __dump_page+0x52c/0x530dump_page+0x14/0x20 set_migratetype_isolate+0x110/0x224start_isolate_page_range+0xc4/0x20c offline_pages+0x124/0x474memory_block_offline+0x44/0xf4 memory_subsys_offline+0x3c/0x70device_offline+0xf0/0x120 ...... After analyzing the vmcore, I found thisissue is caused by page migration. The scenario is that, one thread isdoing page migration, and we will use the target page's ->mapping field tosave 'anon_vma' pointer between page unmap and page move, and now thetarget page is locked and refcount is 1. Currently, there is anotherstress-ng thread performing memory hotplug, attempting to offline thetarget page that is being migrated. It discovers that the refcount of thistarget page is 1, preventing the offline operation, thus proceeding to dumpthe page. However, page_mapping() of the target page may return anincorrect file mapping to crash the system in dump_mapping(), since thetarget page->mapping only saves 'anon_vma' pointer without settingPAGE_MAPPING_ANON flag. There are seveval ways to fix this issue: (1)Setting the PAGE_MAPPING_ANON flag for target page's ->mapping when saving'anon_vma', but this can confuse PageAnon() for PFN walkers, since thetarget page has not built mappings yet. (2) Getting the page lock to callpage_mapping() in __dump_page() to avoid crashing the system, however,there are still some PFN walkers that call page_mapping() without holdingthe page lock, such as compaction. (3) Using target page->private field tosave the 'anon_vma' pointer and 2 bits page state, just as page->mappingrecords an anonymous page, which can remove the page_mapping() impact forPFN walkers and also seems a simple way. So I choose option 3 to fix thisissue, and this can also fix other potential issues for PFN walkers, suchas compaction.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 14.04 LTS"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2023-52490",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2023-52490"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-03-11 18:15:00 UTC",
			"cve": {
				"text": "CVE-2023-52490",
				"href": "https://ubuntu.com/security/CVE-2023-52490",
				"public": "20240311"
			},
			"public_date_at_usn": "2024-03-11 18:15:00 UTC",
			"ref": [
				"https://ubuntu.com/security/notices/USN-6818-1",
				"https://ubuntu.com/security/notices/USN-6819-1",
				"https://ubuntu.com/security/notices/USN-6818-2",
				"https://ubuntu.com/security/notices/USN-6819-2"
			]
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200747740000000",
						"comment": "linux package in trusty is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200747740000010",
						"comment": "linux-lts-xenial package in trusty is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200747740000020",
						"comment": "linux-aws package in trusty is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200747740000030",
						"comment": "linux-azure package in trusty is affected and may need fixing."
					}
				]
			}
		]
	}
}
