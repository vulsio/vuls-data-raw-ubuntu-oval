{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.trusty:def:2024266700000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-26670 on Ubuntu 14.04 LTS (trusty) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: arm64:entry: fix ARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD Currently theARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD workaround isn't quite right, asit is supposed to be applied after the last explicit memory access, but isimmediately followed by an LDR. TheARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD workaround is used to handleCortex-A520 erratum 2966298 and Cortex-A510 erratum 3117295, which aredescribed in: *https://developer.arm.com/documentation/SDEN2444153/0600/?lang=en *https://developer.arm.com/documentation/SDEN1873361/1600/?lang=en In bothcases the workaround is described as: | If pagetable isolation is disabled,the context switch logic in the | kernel can be updated to execute thefollowing sequence on affected | cores before exiting to EL0, and after allexplicit memory accesses: | | 1. A non-shareable TLBI to any context and/oraddress, including | unused contexts or addresses, such as a `TLBI VALE1Xzr`. | | 2. A DSB NSH to guarantee completion of the TLBI. The importantpart being that the TLBI+DSB must be placed \"after all explicit memoryaccesses\". Unfortunately, as-implemented, the TLBI+DSB is immediatelyfollowed by an LDR, as we have: | alternative_ifARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD | tlbi vale1, xzr | dsb nsh |alternative_else_nop_endif | alternative_if_not ARM64_UNMAP_KERNEL_AT_EL0 |ldr lr, [sp, #S_LR] | add sp, sp, #PT_REGS_SIZE // restore sp | eret |alternative_else_nop_endif | | [ ... KPTI exception return path ... ] Thispatch fixes this by reworking the logic to place the TLBI+DSB immediatelybefore the ERET, after all explicit memory accesses. The ERET is currentlyin a separate alternative block, and alternatives cannot be nested. Toaccount for this, the alternative block for ARM64_UNMAP_KERNEL_AT_EL0 isreplaced with a single alternative branch to skip the KPTI logic, with thenew shape of the logic being: | alternative_insn \"b .L_skip_tramp_exit_\\@\",nop, ARM64_UNMAP_KERNEL_AT_EL0 | [ ... KPTI exception return path ... ] |.L_skip_tramp_exit_\\@: | | ldr lr, [sp, #S_LR] | add sp, sp, #PT_REGS_SIZE// restore sp | | alternative_if ARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD |tlbi vale1, xzr | dsb nsh | alternative_else_nop_endif | eret The newstructure means that the workaround is only applied when KPTI is not inuse; this is fine as noted in the documented implications of the erratum: |Pagetable isolation between EL0 and higher level ELs prevents the | issuefrom occurring. ... and as per the workaround description quoted above, theworkaround is only necessary \"If pagetable isolation is disabled\".\n\n    Update Instructions:\n\n    Run `sudo pro fix CVE-2024-26670` to fix the vulnerability. The problem can be corrected\n    by updating your system to the following package versions:\n\nlinux-image-3.11.0-12-generic - 3.11.0-12.19\nlinux-image-3.11.0-12-generic-lpae - 3.11.0-12.19\nlinux-image-extra-3.11.0-12-generic - 3.11.0-12.19\nNo subscription required\n\nlinux-image-4.4.0-13-generic - 4.4.0-13.29~14.04.1\nlinux-image-4.4.0-13-generic-lpae - 4.4.0-13.29~14.04.1\nlinux-image-4.4.0-13-lowlatency - 4.4.0-13.29~14.04.1\nlinux-image-4.4.0-13-powerpc-e500mc - 4.4.0-13.29~14.04.1\nlinux-image-4.4.0-13-powerpc-smp - 4.4.0-13.29~14.04.1\nlinux-image-4.4.0-13-powerpc64-emb - 4.4.0-13.29~14.04.1\nlinux-image-4.4.0-13-powerpc64-smp - 4.4.0-13.29~14.04.1\nlinux-image-extra-4.4.0-13-generic - 4.4.0-13.29~14.04.1\nNo subscription required\n\nlinux-image-4.4.0-1002-aws - 4.4.0-1002.2\nNo subscription required\n\nlinux-image-unsigned-4.15.0-1023-azure - 4.15.0-1023.24~14.04.1\nNo subscription required",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 14.04 LTS"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-26670",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-26670"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-04-02 07:15:00 UTC",
			"cve": {
				"text": "CVE-2024-26670",
				"href": "https://ubuntu.com/security/CVE-2024-26670",
				"public": "20240402"
			},
			"public_date_at_usn": "2024-04-02 07:15:00 UTC",
			"ref": [
				"https://ubuntu.com/security/notices/USN-6818-1",
				"https://ubuntu.com/security/notices/USN-6819-1",
				"https://ubuntu.com/security/notices/USN-6818-2",
				"https://ubuntu.com/security/notices/USN-6819-2",
				"https://ubuntu.com/security/notices/USN-6819-3",
				"https://ubuntu.com/security/notices/USN-6818-3",
				"https://ubuntu.com/security/notices/USN-6818-4",
				"https://ubuntu.com/security/notices/USN-6819-4"
			]
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200636350000000",
						"comment": "linux package in trusty, is related to the CVE in some way and has been fixed (note: '3.11.0-12.19')."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200636350000100",
						"comment": "linux-lts-xenial package in trusty, is related to the CVE in some way and has been fixed (note: '4.4.0-13.29~14.04.1')."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200636350000110",
						"comment": "linux-aws package in trusty, is related to the CVE in some way and has been fixed (note: '4.4.0-1002.2')."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200636350000120",
						"comment": "linux-azure package in trusty, is related to the CVE in some way and has been fixed (note: '4.15.0-1023.24~14.04.1')."
					}
				]
			}
		]
	}
}
