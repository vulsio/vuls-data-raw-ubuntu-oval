{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.trusty:def:2024438910000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-43891 on Ubuntu 14.04 LTS (trusty) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:tracing: Have format file honor EVENT_FILE_FL_FREEDWhen eventfs was introduced, special care had to be done to coordinate thefreeing of the file meta data with the files that are exposed to userspace. The file meta data would have a ref count that is set when the fileis created and would be decremented and freed after the last user thatopened the file closed it. When the file meta data was to be freed, itwould set a flag (EVENT_FILE_FL_FREED) to denote that the file is freed,and any new references made (like new opens or reads) would fail as it ismarked freed. This allowed other meta data to be freed after this flag wasset (under the event_mutex).All the files that were dynamically created in the events directory had apointer to the file meta data and would call event_release() when the lastreference to the user space file was closed. This would be the time that itis safe to free the file meta data.A shortcut was made for the \"format\" file. It's i_private would point tothe \"call\" entry directly and not point to the file's meta data. This isbecause all format files are the same for the same \"call\", so it wasthought there was no reason to differentiate them.  The other filesmaintain state (like the \"enable\", \"trigger\", etc). But this meant if thefile were to disappear, the \"format\" file would be unaware of it.This caused a race that could be trigger via the user_events test (thatwould create dynamic events and free them), and running a loop that wouldread the user_events format files:In one console run: # cd tools/testing/selftests/user_events # while true; do ./ftrace_test; doneAnd in another console run: # cd /sys/kernel/tracing/ # while true; do cat events/user_events/__test_event/format; done2>/dev/nullWith KASAN memory checking, it would trigger a use-after-free bug report(which was a real bug). This was because the format file was not checkingthe file's meta data flag \"EVENT_FILE_FL_FREED\", so it would access theevent that the file meta data pointed to after the event was freed.After inspection, there are other locations that were found to not checkthe EVENT_FILE_FL_FREED flag when accessing the trace_event_file. Add anew helper function: event_file_file() that will make sure that theevent_mutex is held, and will return NULL if the trace_event_file has theEVENT_FILE_FL_FREED flag set. Have the first reference of the struct filepointer use event_file_file() and check for NULL. Later uses can still usethe event_file_data() helper function if the event_mutex is still held andwas not released since the event_file_file() call.\n\n    Update Instructions:\n\n    Run `sudo pro fix CVE-2024-43891` to fix the vulnerability. The problem can be corrected\n    by updating your system to the following package versions:\n\nlinux-image-3.13.0-173-generic - 3.11.0-12.19\nlinux-image-3.13.0-173-generic-lpae - 3.11.0-12.19\nlinux-image-3.13.0-173-lowlatency - 3.11.0-12.19\nlinux-image-3.13.0-173-powerpc-e500 - 3.11.0-12.19\nlinux-image-3.13.0-173-powerpc-e500mc - 3.11.0-12.19\nlinux-image-3.13.0-173-powerpc-smp - 3.11.0-12.19\nlinux-image-3.13.0-173-powerpc64-emb - 3.11.0-12.19\nlinux-image-3.13.0-173-powerpc64-smp - 3.11.0-12.19\nlinux-image-unsigned-3.13.0-173-generic - 3.11.0-12.19\nlinux-image-unsigned-3.13.0-173-lowlatency - 3.11.0-12.19\nAvailable with Ubuntu Pro (Infra-only): https://ubuntu.com/pro\n\nlinux-image-4.4.0-164-generic - 4.4.0-13.29~14.04.1\nlinux-image-4.4.0-164-generic-lpae - 4.4.0-13.29~14.04.1\nlinux-image-4.4.0-164-lowlatency - 4.4.0-13.29~14.04.1\nlinux-image-4.4.0-164-powerpc-e500mc - 4.4.0-13.29~14.04.1\nlinux-image-4.4.0-164-powerpc-smp - 4.4.0-13.29~14.04.1\nlinux-image-4.4.0-164-powerpc64-emb - 4.4.0-13.29~14.04.1\nlinux-image-4.4.0-164-powerpc64-smp - 4.4.0-13.29~14.04.1\nlinux-image-unsigned-4.4.0-164-generic - 4.4.0-13.29~14.04.1\nlinux-image-unsigned-4.4.0-164-lowlatency - 4.4.0-13.29~14.04.1\nAvailable with Ubuntu Pro (Infra-only): https://ubuntu.com/pro\n\nlinux-image-4.4.0-1054-aws - 4.4.0-1002.2\nAvailable with Ubuntu Pro (Infra-only): https://ubuntu.com/pro\n\nlinux-image-unsigned-4.15.0-1059-azure - 4.15.0-1023.24~14.04.1\nAvailable with Ubuntu Pro (Infra-only): https://ubuntu.com/pro",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 14.04 LTS"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-43891",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-43891"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-08-26 11:15:00 UTC",
			"cve": {
				"text": "CVE-2024-43891",
				"href": "https://ubuntu.com/security/CVE-2024-43891",
				"public": "20240826",
				"cvss_score": "4.7",
				"cvss_vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200636350000000",
						"comment": "linux package in trusty, is related to the CVE in some way and has been fixed (note: '3.11.0-12.19')."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200636350000100",
						"comment": "linux-lts-xenial package in trusty, is related to the CVE in some way and has been fixed (note: '4.4.0-13.29~14.04.1')."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200636350000110",
						"comment": "linux-aws package in trusty, is related to the CVE in some way and has been fixed (note: '4.4.0-1002.2')."
					},
					{
						"test_ref": "oval:com.ubuntu.trusty:tst:200636350000120",
						"comment": "linux-azure package in trusty, is related to the CVE in some way and has been fixed (note: '4.15.0-1023.24~14.04.1')."
					}
				]
			}
		]
	}
}
