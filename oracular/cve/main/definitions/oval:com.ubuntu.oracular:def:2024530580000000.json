{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.oracular:def:2024530580000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-53058 on Ubuntu 24.10 (oracular) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:net: stmmac: TSO: Fix unbalanced DMA map/unmap for non-paged SKB dataIn case the non-paged data of a SKB carries protocol header and protocolpayload to be transmitted on a certain platform that the DMA AXI addresswidth is configured to 40-bit/48-bit, or the size of the non-paged datais bigger than TSO_MAX_BUFF_SIZE on a certain platform that the DMA AXIaddress width is configured to 32-bit, then this SKB requires at leasttwo DMA transmit descriptors to serve it.For example, three descriptors are allocated to split one DMA buffermapped from one piece of non-paged data:    dma_desc[N + 0],    dma_desc[N + 1],    dma_desc[N + 2].Then three elements of tx_q->tx_skbuff_dma[] will be allocated to holdextra information to be reused in stmmac_tx_clean():    tx_q->tx_skbuff_dma[N + 0],    tx_q->tx_skbuff_dma[N + 1],    tx_q->tx_skbuff_dma[N + 2].Now we focus on tx_q->tx_skbuff_dma[entry].buf, which is the DMA bufferaddress returned by DMA mapping call. stmmac_tx_clean() will try tounmap the DMA buffer _ONLY_IF_ tx_q->tx_skbuff_dma[entry].bufis a valid buffer address.The expected behavior that saves DMA buffer address of this non-pageddata to tx_q->tx_skbuff_dma[entry].buf is:    tx_q->tx_skbuff_dma[N + 0].buf = NULL;    tx_q->tx_skbuff_dma[N + 1].buf = NULL;    tx_q->tx_skbuff_dma[N + 2].buf = dma_map_single();Unfortunately, the current code misbehaves like this:    tx_q->tx_skbuff_dma[N + 0].buf = dma_map_single();    tx_q->tx_skbuff_dma[N + 1].buf = NULL;    tx_q->tx_skbuff_dma[N + 2].buf = NULL;On the stmmac_tx_clean() side, when dma_desc[N + 0] is closed by theDMA engine, tx_q->tx_skbuff_dma[N + 0].buf is a valid buffer addressobviously, then the DMA buffer will be unmapped immediately.There may be a rare case that the DMA engine does not finish thepending dma_desc[N + 1], dma_desc[N + 2] yet. Now things will gohorribly wrong, DMA is going to access a unmapped/unreferenced memoryregion, corrupted data will be transmited or iommu fault will betriggered :(In contrast, the for-loop that maps SKB fragments behaves perfectlyas expected, and that is how the driver should do for both non-pageddata and paged frags actually.This patch corrects DMA map/unmap sequences by fixing the array indexfor tx_q->tx_skbuff_dma[entry].buf when assigning DMA buffer address.Tested and verified on DWXGMAC CORE 3.20a",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 24.10"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-53058",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-53058"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-11-19 18:15:00 UTC",
			"cve": {
				"text": "CVE-2024-53058",
				"href": "https://ubuntu.com/security/CVE-2024-53058",
				"public": "20241119",
				"cvss_score": "5.5",
				"cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201245420000000",
						"comment": "linux package in oracular is affected. An update containing the fix has been completed and is pending publication (note: '6.11.0-18.18')."
					},
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201245420000010",
						"comment": "linux-aws package in oracular is affected. An update containing the fix has been completed and is pending publication (note: '6.11.0-1009.10')."
					},
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201245420000020",
						"comment": "linux-azure package in oracular is affected. An update containing the fix has been completed and is pending publication (note: '6.11.0-1009.9')."
					},
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201245420000030",
						"comment": "linux-gcp package in oracular is affected. An update containing the fix has been completed and is pending publication (note: '6.11.0-1009.9')."
					},
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201245420000060",
						"comment": "linux-lowlatency package in oracular is affected. An update containing the fix has been completed and is pending publication (note: '6.11.0-1009.10')."
					},
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201245420000040",
						"comment": "linux-oracle package in oracular is affected. An update containing the fix has been completed and is pending publication (note: '6.11.0-1011.12')."
					},
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201245420000050",
						"comment": "linux-raspi package in oracular is affected. An update containing the fix has been completed and is pending publication (note: '6.11.0-1008.8')."
					}
				]
			}
		]
	}
}
