{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.oracular:def:2024267260000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-26726 on Ubuntu 24.10 (oracular) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: btrfs:don't drop extent_map for free space inode on write error While running theCI for an unrelated change I hit the following panic with generic/648 onbtrfs_holes_spacecache. assertion failed: block_start != EXTENT_MAP_HOLE,in fs/btrfs/extent_io.c:1385 ------------[ cut here ]------------ kernelBUG at fs/btrfs/extent_io.c:1385! invalid opcode: 0000 [#1] PREEMPT SMPNOPTI CPU: 1 PID: 2695096 Comm: fsstress Kdump: loaded Tainted: G W6.8.0-rc2+ #1 RIP: 0010:__extent_writepage_io.constprop.0+0x4c1/0x5c0 CallTrace: <TASK> extent_write_cache_pages+0x2ac/0x8f0extent_writepages+0x87/0x110 do_writepages+0xd5/0x1f0filemap_fdatawrite_wbc+0x63/0x90 __filemap_fdatawrite_range+0x5c/0x80btrfs_fdatawrite_range+0x1f/0x50 btrfs_write_out_cache+0x507/0x560btrfs_write_dirty_block_groups+0x32a/0x420 commit_cowonly_roots+0x21b/0x290btrfs_commit_transaction+0x813/0x1360 btrfs_sync_file+0x51a/0x640__x64_sys_fdatasync+0x52/0x90 do_syscall_64+0x9c/0x190entry_SYSCALL_64_after_hwframe+0x6e/0x76 This happens because we fail towrite out the free space cache in one instance, come back around andattempt to write it again. However on the second pass through we go to callbtrfs_get_extent() on the inode to get the extent mapping. Because this isa new block group, and with the free space inode we always search thecommit root to avoid deadlocking with the tree, we find nothing and returna EXTENT_MAP_HOLE for the requested range. This happens because the firsttime we try to write the space cache out we hit an error, and on an errorwe drop the extent mapping. This is normal for normal files, but the freespace cache inode is special. We always expect the extent map to becorrect. Thus the second time through we end up with a bogus extent map.Since we're deprecating this feature, the most straightforward way to fixthis is to simply skip dropping the extent map range for this failed range.I shortened the test by using error injection to stress the area to make iteasier to reproduce. With this patch in place we no longer panic with myerror injection test.\n\n    Update Instructions:\n\n    Run `sudo pro fix CVE-2024-26726` to fix the vulnerability. The problem can be corrected\n    by updating your system to the following package versions:\n\nlinux-image-6.8.0-31-generic - 6.8.0-31.31\nlinux-image-unsigned-6.8.0-31-generic - 6.8.0-31.31\nlinux-image-unsigned-6.8.0-31-generic-64k - 6.8.0-31.31\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1008-aws - 6.8.0-1008.8\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1007-azure - 6.8.0-1007.7\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1007-gcp - 6.8.0-1007.7\nNo subscription required\n\nlinux-image-unsigned-6.8.0-31-lowlatency - 6.8.0-31.31.1\nlinux-image-unsigned-6.8.0-31-lowlatency-64k - 6.8.0-31.31.1\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1005-oracle - 6.8.0-1005.5\nlinux-image-unsigned-6.8.0-1005-oracle-64k - 6.8.0-1005.5\nNo subscription required\n\nlinux-image-6.8.0-1004-raspi - 6.8.0-1004.4\nNo subscription required",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 24.10"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-26726",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-26726"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-04-03 15:15:00 UTC",
			"cve": {
				"text": "CVE-2024-26726",
				"href": "https://ubuntu.com/security/CVE-2024-26726",
				"public": "20240403"
			},
			"public_date_at_usn": "2024-04-03 15:15:00 UTC",
			"ref": [
				"https://ubuntu.com/security/notices/USN-6895-1",
				"https://ubuntu.com/security/notices/USN-6895-2",
				"https://ubuntu.com/security/notices/USN-6900-1",
				"https://ubuntu.com/security/notices/USN-6895-3",
				"https://ubuntu.com/security/notices/USN-6895-4"
			]
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201499000000000",
						"comment": "linux package in oracular, is related to the CVE in some way and has been fixed (note: '6.8.0-31.31')."
					},
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201499000000010",
						"comment": "linux-aws package in oracular, is related to the CVE in some way and has been fixed (note: '6.8.0-1008.8')."
					},
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201499000000020",
						"comment": "linux-azure package in oracular, is related to the CVE in some way and has been fixed (note: '6.8.0-1007.7')."
					},
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201499000000020",
						"comment": "linux-gcp package in oracular, is related to the CVE in some way and has been fixed (note: '6.8.0-1007.7')."
					},
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201499000000030",
						"comment": "linux-lowlatency package in oracular, is related to the CVE in some way and has been fixed (note: '6.8.0-31.31.1')."
					},
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201499000000040",
						"comment": "linux-oracle package in oracular, is related to the CVE in some way and has been fixed (note: '6.8.0-1005.5')."
					},
					{
						"test_ref": "oval:com.ubuntu.oracular:tst:201499000000050",
						"comment": "linux-raspi package in oracular, is related to the CVE in some way and has been fixed (note: '6.8.0-1004.4')."
					}
				]
			}
		]
	}
}
