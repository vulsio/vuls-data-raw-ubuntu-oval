{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.bionic:def:2021470940000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2021-47094 on Ubuntu 18.04 FIPS Certified (bionic) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: KVM:x86/mmu: Don't advance iterator after restart due to yielding Afterdropping mmu_lock in the TDP MMU, restart the iterator duringtdp_iter_next() and do not advance the iterator. Advancing the iteratorresults in skipping the top-level SPTE and all its children, which is fatalif any of the skipped SPTEs were not visited before yielding. When zappingall SPTEs, i.e. when min_level == root_level, restarting the iter and theninvoking tdp_iter_next() is always fatal if the current gfn has as a validSPTE, as advancing the iterator results in try_step_side() skipping thecurrent gfn, which wasn't visited before yielding. Sprinkle WARNs oniter->yielded being true in various helpers that are often used inconjunction with yielding, and tag the helper with __must_check to reducethe probabily of improper usage. Failing to zap a top-level SPTE manifestsin one of two ways. If a valid SPTE is skipped by bothkvm_tdp_mmu_zap_all() and kvm_tdp_mmu_put_root(), the shadow page will beleaked and KVM will WARN accordingly. WARNING: CPU: 1 PID: 3509 atarch/x86/kvm/mmu/tdp_mmu.c:46 [kvm] RIP:0010:kvm_mmu_uninit_tdp_mmu+0x3e/0x50 [kvm] Call Trace: <TASK>kvm_arch_destroy_vm+0x130/0x1b0 [kvm] kvm_destroy_vm+0x162/0x2a0 [kvm]kvm_vcpu_release+0x34/0x60 [kvm] __fput+0x82/0x240 task_work_run+0x5c/0x90do_exit+0x364/0xa10 ? futex_unqueue+0x38/0x60 do_group_exit+0x33/0xa0get_signal+0x155/0x850 arch_do_signal_or_restart+0xed/0x750exit_to_user_mode_prepare+0xc5/0x120 syscall_exit_to_user_mode+0x1d/0x40do_syscall_64+0x48/0xc0 entry_SYSCALL_64_after_hwframe+0x44/0xae Ifkvm_tdp_mmu_zap_all() skips a gfn/SPTE but that SPTE is then zapped bykvm_tdp_mmu_put_root(), KVM triggers a use-after-free in the form ofmarking a struct page as dirty/accessed after it has been put back on thefree list. This directly triggers a WARN due to encountering a page withpage_count() == 0, but it can also lead to data corruption and additionalerrors in the kernel. WARNING: CPU: 7 PID: 1995658 atarch/x86/kvm/../../../virt/kvm/kvm_main.c:171 RIP:0010:kvm_is_zone_device_pfn.part.0+0x9e/0xd0 [kvm] Call Trace: <TASK>kvm_set_pfn_dirty+0x120/0x1d0 [kvm] __handle_changed_spte+0x92e/0xca0 [kvm]__handle_changed_spte+0x63c/0xca0 [kvm] __handle_changed_spte+0x63c/0xca0[kvm] __handle_changed_spte+0x63c/0xca0 [kvm] zap_gfn_range+0x549/0x620[kvm] kvm_tdp_mmu_put_root+0x1b6/0x270 [kvm] mmu_free_root_page+0x219/0x2c0[kvm] kvm_mmu_free_roots+0x1b4/0x4e0 [kvm] kvm_mmu_unload+0x1c/0xa0 [kvm]kvm_arch_destroy_vm+0x1f2/0x5c0 [kvm] kvm_put_kvm+0x3b1/0x8b0 [kvm]kvm_vcpu_release+0x4e/0x70 [kvm] __fput+0x1f7/0x8c0task_work_run+0xf8/0x1a0 do_exit+0x97b/0x2230 do_group_exit+0xda/0x2a0get_signal+0x3be/0x1e50 arch_do_signal_or_restart+0x244/0x17f0exit_to_user_mode_prepare+0xcb/0x120 syscall_exit_to_user_mode+0x1d/0x40do_syscall_64+0x4d/0x90 entry_SYSCALL_64_after_hwframe+0x44/0xae Note, theunderlying bug existed even before commit 1af4a96025b3 (\"KVM: x86/mmu:Yield in TDU MMU iter even if no SPTES changed\") moved calls totdp_mmu_iter_cond_resched() to the beginning of loops, as KVM could stillincorrectly advance past a top-level entry when yielding on a lower-levelentry. But with respect to leaking shadow pages, the bug was introduced byyielding before processing the current gfn. Alternatively,tdp_mmu_iter_cond_resched() could simply fall through, or callers couldjump to their \"retry\" label. The downside of that approach is thattdp_mmu_iter_cond_resched() _must_ be called before anything else in theloop, and there's no easy way to enfornce that requirement. Ideally, KVMwould handling the cond_resched() fully within the iterator macro (the codeis actually quite clean) and avoid this entire class of bugs, but that isextremely difficult do wh ---truncated---",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 18.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2021-47094",
			"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-47094"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-03-04 18:15:00 UTC",
			"cve": {
				"text": "CVE-2021-47094",
				"href": "https://ubuntu.com/security/CVE-2021-47094",
				"public": "20240304"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201585530000010",
						"comment": "linux-fips package in fips/bionic is affected and may need fixing."
					}
				]
			}
		]
	}
}
