{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.bionic:def:2024358090000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-35809 on Ubuntu 18.04 FIPS Certified (bionic) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: PCI/PM:Drain runtime-idle callbacks before driver removal A race condition betweenthe .runtime_idle() callback and the .remove() callback in the rtsx_pcr PCIdriver leads to a kernel crash due to an unhandled page fault [1]. Theproblem is that rtsx_pci_runtime_idle() is not expected to be running afterpm_runtime_get_sync() has been called, but the latter doesn't reallyguarantee that. It only guarantees that the suspend and resume callbackswill not be running when it returns. However, if a .runtime_idle() callbackis already running when pm_runtime_get_sync() is called, the latter willnotice that the runtime PM status of the device is RPM_ACTIVE and it willreturn right away without waiting for the former to complete. In fact, itcannot wait for .runtime_idle() to complete because it may be called fromthat callback (it arguably does not make much sense to do that, but it isnot strictly prohibited). Thus in general, whoever is providing a.runtime_idle() callback needs to protect it from running in parallel withwhatever code runs after pm_runtime_get_sync(). [Note that .runtime_idle()will not start after pm_runtime_get_sync() has returned, but it maycontinue running then if it has started earlier.] One way to address thatrace condition is to call pm_runtime_barrier() after pm_runtime_get_sync()(not before it, because a nonzero value of the runtime PM usage counter isnecessary to prevent runtime PM callbacks from being invoked) to wait forthe .runtime_idle() callback to complete should it be running at thatpoint. A suitable place for doing that is in pci_device_remove() whichcalls pm_runtime_get_sync() before removing the driver, so it may as wellcall pm_runtime_barrier() subsequently, which will prevent the race inquestion from occurring, not just in the rtsx_pcr driver, but in any PCIdrivers providing .runtime_idle() callbacks.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 18.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-35809",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-35809"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-17 14:15:00 UTC",
			"cve": {
				"text": "CVE-2024-35809",
				"href": "https://ubuntu.com/security/CVE-2024-35809",
				"public": "20240517"
			},
			"public_date_at_usn": "2024-05-17 14:15:00 UTC",
			"ref": [
				"https://ubuntu.com/security/notices/USN-6816-1",
				"https://ubuntu.com/security/notices/USN-6817-1",
				"https://ubuntu.com/security/notices/USN-6817-2",
				"https://ubuntu.com/security/notices/USN-6817-3"
			]
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201585530000010",
						"comment": "linux-fips package in fips/bionic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201245420000320",
						"comment": "linux-aws-fips package in fips/bionic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201245420000330",
						"comment": "linux-azure-fips package in fips/bionic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201245420000340",
						"comment": "linux-gcp-fips package in fips/bionic is affected and may need fixing."
					}
				]
			}
		]
	}
}
