{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.bionic:def:2024268320000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-26832 on Ubuntu 18.04 FIPS Certified (bionic) - low",
		"description": "In the Linux kernel, the following vulnerability has been resolved:mm: zswap: fix missing folio cleanup in writeback race pathIn zswap_writeback_entry(), after we get a folio from__read_swap_cache_async(), we grab the tree lock again to check that theswap entry was not invalidated and recycled.  If it was, we delete thefolio we just added to the swap cache and exit.However, __read_swap_cache_async() returns the folio locked when it isnewly allocated, which is always true for this path, and the folio isref'd.  Make sure to unlock and put the folio before returning.This was discovered by code inspection, probably because this path handlesa race condition that should not happen often, and the bug would not crashthe system, it will only strand the folio indefinitely.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 18.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-26832",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-26832"
		},
		"advisory": {
			"severity": "Low",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-04-17 10:15:00 UTC",
			"bug": [
				"https://bugzilla.redhat.com/show_bug.cgi?id=2275590",
				"https://bugzilla.suse.com/show_bug.cgi?id=1223007"
			],
			"cve": {
				"text": "CVE-2024-26832",
				"href": "https://ubuntu.com/security/CVE-2024-26832",
				"public": "20240417"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201585530000010",
						"comment": "linux-fips package in fips/bionic is affected and may need fixing."
					}
				]
			}
		]
	}
}
