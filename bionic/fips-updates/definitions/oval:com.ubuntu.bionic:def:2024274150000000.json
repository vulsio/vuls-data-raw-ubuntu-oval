{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.bionic:def:2024274150000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-27415 on Ubuntu 18.04 FIPS Compliant (bionic) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:netfilter: bridge: confirm multicast packets before passing them up thestack conntrack nf_confirm logic cannot handle cloned skbs referencing thesame nf_conn entry, which will happen for multicast (broadcast) frames onbridges. Example: macvlan0 | br0 / \\ ethX ethY ethX (or Y) receives a L2multicast or broadcast packet containing an IP packet, flow is not yet inconntrack table. 1. skb passes through bridge and fake-ip(br_netfilter)Prerouting. -> skb->_nfct now references a unconfirmed entry2. skb is broad/mcast packet. bridge now passes clones out on each bridgeinterface. 3. skb gets passed up the stack. 4. In macvlan case, macvlandriver retains clone(s) of the mcast skb and schedules a work queue to sendthem out on the lower devices. The clone skb->_nfct is not a copy, it isthe same entry as the original skb. The macvlan rx handler then returnsRX_HANDLER_PASS. 5. Normal conntrack hooks (in NF_INET_LOCAL_IN) confirmthe orig skb. The Macvlan broadcast worker and normal confirm path willrace. This race will not happen if step 2 already confirmed a clone. Inthat case later steps perform skb_clone() with skb->_nfct already confirmed(in hash table). This works fine. But such confirmation won't happen wheneb/ip/nftables rules dropped the packets before they reached the nf_confirmstep in postrouting. Pablo points out that nf_conntrack_bridge doesn'tallow use of stateful nat, so we can safely discard the nf_conn entry andlet inet call conntrack again. This doesn't work for bridge netfilter: skbcould have a nat transformation. Also bridge nf prevents re-invocation ofinet prerouting via 'sabotage_in' hook. Work around this problem byexplicit confirmation of the entry at LOCAL_IN time, before upper layer hasa chance to clone the unconfirmed entry. The downside is that this disablesNAT and conntrack helpers. Alternative fix would be to add locking to allcode parts that deal with unconfirmed packets, but even if that could bedone in a sane way this opens up other problems, for example: -m physdev--physdev-out eth0 -j SNAT --snat-to 1.2.3.4 -m physdev --physdev-out eth1-j SNAT --snat-to 1.2.3.5 For multicast case, only one of such conflictingmappings will be created, conntrack only handles 1:1 NAT mappings. Usersshould set create a setup that explicitly marks such traffic NOTRACK(conntrack bypass) to avoid this, but we cannot auto-bypass them, rulesetmight have accept rules for untracked traffic already, so user-visiblebehaviour would change.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 18.04 FIPS Compliant"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-27415",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-27415"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-17 12:15:00 UTC",
			"cve": {
				"text": "CVE-2024-27415",
				"href": "https://ubuntu.com/security/CVE-2024-27415",
				"public": "20240517"
			},
			"public_date_at_usn": "2024-05-17 12:15:00 UTC",
			"ref": [
				"https://ubuntu.com/security/notices/USN-6820-1",
				"https://ubuntu.com/security/notices/USN-6821-1",
				"https://ubuntu.com/security/notices/USN-6821-2"
			]
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201585530000010",
						"comment": "linux-fips package in fips-updates/bionic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201245420000320",
						"comment": "linux-aws-fips package in fips-updates/bionic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201245420000330",
						"comment": "linux-azure-fips package in fips-updates/bionic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201245420000340",
						"comment": "linux-gcp-fips package in fips-updates/bionic is affected and may need fixing."
					}
				]
			}
		]
	}
}
