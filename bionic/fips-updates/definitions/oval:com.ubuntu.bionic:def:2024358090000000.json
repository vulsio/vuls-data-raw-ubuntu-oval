{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.bionic:def:2024358090000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-35809 on Ubuntu 18.04 FIPS Compliant (bionic) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:PCI/PM: Drain runtime-idle callbacks before driver removalA race condition between the .runtime_idle() callback and the .remove()callback in the rtsx_pcr PCI driver leads to a kernel crash due to anunhandled page fault [1].The problem is that rtsx_pci_runtime_idle() is not expected to be runningafter pm_runtime_get_sync() has been called, but the latter doesn't reallyguarantee that.  It only guarantees that the suspend and resume callbackswill not be running when it returns.However, if a .runtime_idle() callback is already running whenpm_runtime_get_sync() is called, the latter will notice that the runtime PMstatus of the device is RPM_ACTIVE and it will return right away withoutwaiting for the former to complete.  In fact, it cannot wait for.runtime_idle() to complete because it may be called from that callback (itarguably does not make much sense to do that, but it is not strictlyprohibited).Thus in general, whoever is providing a .runtime_idle() callback needsto protect it from running in parallel with whatever code runs afterpm_runtime_get_sync().  [Note that .runtime_idle() will not start afterpm_runtime_get_sync() has returned, but it may continue running then if ithas started earlier.]One way to address that race condition is to call pm_runtime_barrier()after pm_runtime_get_sync() (not before it, because a nonzero value of theruntime PM usage counter is necessary to prevent runtime PM callbacks frombeing invoked) to wait for the .runtime_idle() callback to complete shouldit be running at that point.  A suitable place for doing that is inpci_device_remove() which calls pm_runtime_get_sync() before removing thedriver, so it may as well call pm_runtime_barrier() subsequently, whichwill prevent the race in question from occurring, not just in the rtsx_pcrdriver, but in any PCI drivers providing .runtime_idle() callbacks.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 18.04 FIPS Compliant"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-35809",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-35809"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-17 14:15:00 UTC",
			"cve": {
				"text": "CVE-2024-35809",
				"href": "https://ubuntu.com/security/CVE-2024-35809",
				"public": "20240517"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201585530000010",
						"comment": "linux-fips package in fips-updates/bionic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201245420000320",
						"comment": "linux-aws-fips package in fips-updates/bionic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201245420000330",
						"comment": "linux-azure-fips package in fips-updates/bionic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.bionic:tst:201245420000340",
						"comment": "linux-gcp-fips package in fips-updates/bionic is affected and may need fixing."
					}
				]
			}
		]
	}
}
