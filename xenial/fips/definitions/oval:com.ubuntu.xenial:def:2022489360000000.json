{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2022489360000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2022-48936 on Ubuntu 16.04 FIPS Certified (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:gso: do not skip outer ip header in case of ipip and net_failoverWe encounter a tcp drop issue in our cloud environment. Packet GROed inhost forwards to a VM virtio_net nic with net_failover enabled. VM actsas a IPVS LB with ipip encapsulation. The full path like:host gro -> vm virtio_net rx -> net_failover rx -> ipvs fullnat -> ipip encap -> net_failover tx -> virtio_net txWhen net_failover transmits a ipip pkt (gso_type = 0x0103, which meansSKB_GSO_TCPV4, SKB_GSO_DODGY and SKB_GSO_IPXIP4), there is no gsodid because it supports TSO and GSO_IPXIP4. But network_header points toinner ip header.Call Trace: tcp4_gso_segment        ------> return NULL inet_gso_segment        ------> inner iph, network_header points to ipip_gso_segment inet_gso_segment        ------> outer iph skb_mac_gso_segmentAfterwards virtio_net transmits the pkt, only inner ip header is modified.And the outer one just keeps unchanged. The pkt will be dropped in remotehost.Call Trace: inet_gso_segment        ------> inner iph, outer iph is skipped skb_mac_gso_segment __skb_gso_segment validate_xmit_skb validate_xmit_skb_list sch_direct_xmit __qdisc_run __dev_queue_xmit        ------> virtio_net dev_hard_start_xmit __dev_queue_xmit        ------> net_failover ip_finish_output2 ip_output iptunnel_xmit ip_tunnel_xmit ipip_tunnel_xmit        ------> ipip dev_hard_start_xmit __dev_queue_xmit ip_finish_output2 ip_output ip_forward ip_rcv __netif_receive_skb_one_core netif_receive_skb_internal napi_gro_receive receive_buf virtnet_poll net_rx_actionThe root cause of this issue is specific with the rare combination ofSKB_GSO_DODGY and a tunnel device that adds an SKB_GSO_ tunnel option.SKB_GSO_DODGY is set from external virtio_net. We need to reset networkheader when callbacks.gso_segment() returns NULL.This patch also includes ipv6_gso_segment(), considering SIT, etc.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2022-48936",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2022-48936"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-08-22 04:15:00 UTC",
			"cve": {
				"text": "CVE-2022-48936",
				"href": "https://ubuntu.com/security/CVE-2022-48936",
				"public": "20240822"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips: while related to the CVE in some way, a decision has been made to ignore this issue (note: 'ESM criteria, was needed')."
					}
				]
			}
		]
	}
}
