{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2024422310000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-42231 on Ubuntu 16.04 FIPS Certified (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:btrfs: zoned: fix calc_available_free_space() for zoned modecalc_available_free_space() returns the total size of metadata (orsystem) block groups, which can be allocated from unallocated diskspace. The logic is wrong on zoned mode in two places.First, the calculation of data_chunk_size is wrong. We always allocateone zone as one chunk, and no partial allocation of a zone. So, weshould use zone_size (= data_sinfo->chunk_size) as it is.Second, the result \"avail\" may not be zone aligned. Since we alwaysallocate one zone as one chunk on zoned mode, returning non-zone sizealigned bytes will result in less pressure on the async metadata reclaimprocess.This is serious for the nearly full state with a large zone size device.Allowing over-commit too much will result in less async reclaim work andend up in ENOSPC. We can align down to the zone size to avoid that.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-42231",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-42231"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-07-30",
			"cve": {
				"text": "CVE-2024-42231",
				"href": "https://ubuntu.com/security/CVE-2024-42231",
				"public": "20240730"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips package in fips/xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
