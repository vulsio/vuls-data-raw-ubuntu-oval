{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2021473650000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2021-47365 on Ubuntu 16.04 FIPS Certified (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: afs:Fix page leak There's a loop in afs_extend_writeback() that adds extrapages to a write we want to make to improve the efficiency of the writebackby making it larger. This loop stops, however, if we hit a page we can'twrite back from immediately, but it doesn't get rid of the page ref wespeculatively acquired. This was caused by the removal of the cleanup loopwhen the code switched from using find_get_pages_contig() to xarrayscanning as the latter only gets a single page at a time, not a batch. Fixthis by putting the page on a ref on an early break from the loop.Unfortunately, we can't just add that page to the pagevec we're employingas we'll go through that and add those pages to the RPC call. This wasfound by the generic/074 test. It leaks ~4GiB of RAM each time it is run -which can be observed with \"top\".",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2021-47365",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2021-47365"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-21 15:15:00 UTC",
			"cve": {
				"text": "CVE-2021-47365",
				"href": "https://ubuntu.com/security/CVE-2021-47365",
				"public": "20240521"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips package in fips/xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
