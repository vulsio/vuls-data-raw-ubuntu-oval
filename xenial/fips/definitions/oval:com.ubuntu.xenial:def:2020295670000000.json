{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2020295670000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2020-29567 on Ubuntu 16.04 FIPS Certified (xenial) - medium",
		"description": "An issue was discovered in Xen 4.14.x. When moving IRQs between CPUs todistribute the load of IRQ handling, IRQ vectors are dynamically allocatedand de-allocated on the relevant CPUs. De-allocation has to happen whencertain constraints are met. If these conditions are not met when firstchecked, the checking CPU may send an interrupt to itself, in theexpectation that this IRQ will be delivered only after the conditionpreventing the cleanup has cleared. For two specific IRQ vectors, thisexpectation was violated, resulting in a continuous stream ofself-interrupts, which renders the CPU effectively unusable. A domain witha passed through PCI device can cause lockup of a physical CPU, resultingin a Denial of Service (DoS) to the entire host. Only x86 systems arevulnerable. Arm systems are not vulnerable. Only guests with physical PCIdevices passed through to them can exploit the vulnerability.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2020-29567",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2020-29567"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2020 Canonical Ltd.",
			"public_date": "2020-12-15 17:15:00 UTC",
			"cve": {
				"text": "CVE-2020-29567",
				"href": "https://ubuntu.com/security/CVE-2020-29567",
				"public": "20201215",
				"cvss_score": "6.2",
				"cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:2017155970000000",
						"comment": "xen: while related to the CVE in some way, a decision has been made to ignore this issue (note: 'end of standard support, was needed')."
					}
				]
			}
		]
	}
}
