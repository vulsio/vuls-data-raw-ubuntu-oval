{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2024274050000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-27405 on Ubuntu 16.04 FIPS Certified (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: usb:gadget: ncm: Avoid dropping datagrams of properly parsed NTBs It isobserved sometimes when tethering is used over NCM with Windows 11 as host,at some instances, the gadget_giveback has one byte appended at the end ofa proper NTB. When the NTB is parsed, unwrap call looks for any leftoverbytes in SKB provided by u_ether and if there are any pending bytes, ittreats them as a separate NTB and parses it. But in case the second NTB (asper unwrap call) is faulty/corrupt, all the datagrams that were parsedproperly in the first NTB and saved in rx_list are dropped. Adding a fewcustom traces showed the following: [002] d..1 7828.532866:dwc3_gadget_giveback: ep1out: req 000000003868811a length 1025/16384 zsI==> 0 [002] d..1 7828.532867: ncm_unwrap_ntb: K: ncm_unwrap_ntb toprocess:1025 [002] d..1 7828.532867: ncm_unwrap_ntb: K: ncm_unwrap_ntb nth:1751999342 [002] d..1 7828.532868: ncm_unwrap_ntb: K: ncm_unwrap_ntb seq:0xce67 [002] d..1 7828.532868: ncm_unwrap_ntb: K: ncm_unwrap_ntb blk_len:0x400 [002] d..1 7828.532868: ncm_unwrap_ntb: K: ncm_unwrap_ntb ndp_len:0x10 [002] d..1 7828.532869: ncm_unwrap_ntb: K: Parsed NTB with 1 frames Inthis case, the giveback is of 1025 bytes and block length is 1024. The rest1 byte (which is 0x00) won't be parsed resulting in drop of all datagramsin rx_list. Same is case with packets of size 2048: [002] d..1 7828.557948:dwc3_gadget_giveback: ep1out: req 0000000011dfd96e length 2049/16384 zsI==> 0 [002] d..1 7828.557949: ncm_unwrap_ntb: K: ncm_unwrap_ntb nth:1751999342 [002] d..1 7828.557950: ncm_unwrap_ntb: K: ncm_unwrap_ntbblk_len: 0x800 Lecroy shows one byte coming in extra confirming that thebyte is coming in from PC: Transfer 2959 - Bytes Transferred(1025)Timestamp((18.524 843 590) - Transaction 8391 - Data(1025 bytes)Timestamp(18.524 843 590) --- Packet 4063861 Data(1024 bytes)Duration(2.117us) Idle(14.700ns) Timestamp(18.524 843 590) --- Packet4063863 Data(1 byte) Duration(66.160ns) Time(282.000ns) Timestamp(18.524845 722) According to Windows driver, no ZLP is needed if wBlockLength isnon-zero, because the non-zero wBlockLength has already told the functionside the size of transfer to be expected. However, there are in-market NCMdevices that rely on ZLP as long as the wBlockLength is multiple ofwMaxPacketSize. To deal with such devices, it pads an extra 0 at end so thetransfer is no longer multiple of wMaxPacketSize.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-27405",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-27405"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-17 12:15:00 UTC",
			"cve": {
				"text": "CVE-2024-27405",
				"href": "https://ubuntu.com/security/CVE-2024-27405",
				"public": "20240517"
			},
			"public_date_at_usn": "2024-05-17 12:15:00 UTC",
			"ref": [
				"https://ubuntu.com/security/notices/USN-6820-1",
				"https://ubuntu.com/security/notices/USN-6821-1",
				"https://ubuntu.com/security/notices/USN-6821-2",
				"https://ubuntu.com/security/notices/USN-6828-1",
				"https://ubuntu.com/security/notices/USN-6820-2",
				"https://ubuntu.com/security/notices/USN-6821-3",
				"https://ubuntu.com/security/notices/USN-6831-1",
				"https://ubuntu.com/security/notices/USN-6821-4"
			]
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips package in fips/xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
