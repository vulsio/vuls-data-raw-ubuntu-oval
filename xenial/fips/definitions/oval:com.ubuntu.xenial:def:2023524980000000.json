{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2023524980000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2023-52498 on Ubuntu 16.04 FIPS Certified (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: PM:sleep: Fix possible deadlocks in core system-wide PM code It is reportedthat in low-memory situations the system-wide resume core code deadlocks,because async_schedule_dev() executes its argument function synchronouslyif it cannot allocate memory (and not only in that case) and that functionattempts to acquire a mutex that is already held. Executing the argumentfunction synchronously from within dpm_async_fn() may also be problematicfor ordering reasons (it may cause a consumer device's resume callback tobe invoked before a requisite supplier device's one, for example). Addressthis by changing the code in question to use async_schedule_dev_nocall()for scheduling the asynchronous execution of device suspend and resumefunctions and to directly run them synchronously ifasync_schedule_dev_nocall() returns false.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2023-52498",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2023-52498"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-03-11 18:15:00 UTC",
			"cve": {
				"text": "CVE-2023-52498",
				"href": "https://ubuntu.com/security/CVE-2023-52498",
				"public": "20240311"
			},
			"public_date_at_usn": "2024-03-11 18:15:00 UTC",
			"ref": [
				"https://ubuntu.com/security/notices/USN-6765-1",
				"https://ubuntu.com/security/notices/USN-6766-1"
			]
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips package in fips/xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
