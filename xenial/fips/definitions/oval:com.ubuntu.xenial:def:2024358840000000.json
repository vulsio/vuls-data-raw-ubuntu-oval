{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2024358840000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-35884 on Ubuntu 16.04 FIPS Certified (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: udp: donot accept non-tunnel GSO skbs landing in a tunnel Whenrx-udp-gro-forwarding is enabled UDP packets might be GROed when beingforwarded. If such packets might land in a tunnel this can cause variousissues and udp_gro_receive makes sure this isn't the case by looking for amatching socket. This is performed in udp4/6_gro_lookup_skb but only in thecurrent netns. This is an issue with tunneled packets when the endpoint isin another netns. In such cases the packets will be GROed at the UDP level,which leads to various issues later on. The same thing can happen withrx-gro-list. We saw this with geneve packets being GROed at the UDP level.In such case gso_size is set; later the packet goes through the geneve rxpath, the geneve header is pulled, the offset are adjusted and frag_listskbs are not adjusted with regard to geneve. When those skbs hitskb_fragment, it will misbehave. Different outcomes are possible dependingon what the GROed skbs look like; from corrupted packets to kernel crashes.One example is a BUG_ON[1] triggered in skb_segment while processing thefrag_list. Because gso_size is wrong (geneve header was pulled) skb_segmentthinks there is \"geneve header size\" of data in frag_list, although it's infact the next packet. The BUG_ON itself has nothing to do with the issue.This is only one of the potential issues. Looking up for a matching socketin udp_gro_receive is fragile: the lookup could be extended to all netns(not speaking about performances) but nothing prevents those packets frombeing modified in between and we could still not find a matching socket.It's OK to keep the current logic there as it should cover most cases butwe also need to make sure we handle tunnel packets being GROed too early.This is done by extending the checks in udp_unexpected_gso: GSO packetslacking the SKB_GSO_UDP_TUNNEL/_CSUM bits and landing in a tunnel must besegmented. [1] kernel BUG at net/core/skbuff.c:4408! RIP:0010:skb_segment+0xd2a/0xf70 __udp_gso_segment+0xaa/0x560",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-35884",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-35884"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-19 09:15:00 UTC",
			"cve": {
				"text": "CVE-2024-35884",
				"href": "https://ubuntu.com/security/CVE-2024-35884",
				"public": "20240519"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips package in fips/xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
