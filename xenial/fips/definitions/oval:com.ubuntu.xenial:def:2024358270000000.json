{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2024358270000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-35827 on Ubuntu 16.04 FIPS Certified (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:io_uring/net: fix overflow check in io_recvmsg_mshot_prep() The\"controllen\" variable is type size_t (unsigned long). Casting it to intcould lead to an integer underflow. The check_add_overflow() functionconsiders the type of the destination which is type int. If we add twopositive values and the result cannot fit in an integer then that's countedas an overflow. However, if we cast \"controllen\" to an int and it turnsnegative, then negative values *can* fit into an int type so there is nooverflow. Good: 100 + (unsigned long)-4 = 96 <-- overflow Bad: 100 +(int)-4 = 96 <-- no overflow I deleted the cast of the sizeof() as well.That's not a bug but the cast is unnecessary.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-35827",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-35827"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-17 14:15:00 UTC",
			"cve": {
				"text": "CVE-2024-35827",
				"href": "https://ubuntu.com/security/CVE-2024-35827",
				"public": "20240517"
			},
			"public_date_at_usn": "2024-05-17 14:15:00 UTC",
			"ref": [
				"https://ubuntu.com/security/notices/USN-6816-1",
				"https://ubuntu.com/security/notices/USN-6817-1",
				"https://ubuntu.com/security/notices/USN-6817-2",
				"https://ubuntu.com/security/notices/USN-6817-3"
			]
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips package in fips/xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
