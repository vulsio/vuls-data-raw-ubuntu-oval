{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2021476070000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2021-47607 on Ubuntu 16.04 FIPS Certified (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: bpf:Fix kernel address leakage in atomic cmpxchg's r0 aux reg Theimplementation of BPF_CMPXCHG on a high level has the following parameters:.-[old-val] .-[new-val] BPF_R0 = cmpxchg{32,64}(DST_REG + insn->off,BPF_R0, SRC_REG) `-[mem-loc] `-[old-val] Given a BPF insn can only have tworegisters (dst, src), the R0 is fixed and used as an auxilliary registerfor input (old value) as well as output (returning old value from memorylocation). While the verifier performs a number of safety checks, it missesto reject unprivileged programs where R0 contains a pointer as old value.Through brute-forcing it takes about ~16sec on my machine to leak a kernelpointer with BPF_CMPXCHG. The PoC is basically probing for kernel addressesby storing the guessed address into the map slot as a scalar, and using themap value pointer as R0 while SRC_REG has a canary value to detect amatching address. Fix it by checking R0 for pointers, and reject if that'sthe case for unprivileged programs.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2021-47607",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2021-47607"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-06-19 15:15:00 UTC",
			"cve": {
				"text": "CVE-2021-47607",
				"href": "https://ubuntu.com/security/CVE-2021-47607",
				"public": "20240619"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips package in fips/xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
