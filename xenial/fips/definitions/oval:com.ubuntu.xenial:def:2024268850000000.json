{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2024268850000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-26885 on Ubuntu 16.04 FIPS Certified (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:bpf: Fix DEVMAP_HASH overflow check on 32-bit archesThe devmap code allocates a number hash buckets equal to the next powerof two of the max_entries value provided when creating the map. Whenrounding up to the next power of two, the 32-bit variable storing thenumber of buckets can overflow, and the code checks for overflow bychecking if the truncated 32-bit value is equal to 0. However, on 32-bitarches the rounding up itself can overflow mid-way through, because itends up doing a left-shift of 32 bits on an unsigned long value. If thesize of an unsigned long is four bytes, this is undefined behaviour, sothere is no guarantee that we'll end up with a nice and tidy 0-value atthe end.Syzbot managed to turn this into a crash on arm32 by creating aDEVMAP_HASH with max_entries > 0x80000000 and then trying to update it.Fix this by moving the overflow check to before the rounding upoperation.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Certified"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-26885",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-26885"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-04-17 11:15:00 UTC",
			"cve": {
				"text": "CVE-2024-26885",
				"href": "https://ubuntu.com/security/CVE-2024-26885",
				"public": "20240417",
				"cvss_score": "7.8",
				"cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips package in fips/xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
