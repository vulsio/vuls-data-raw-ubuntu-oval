{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2024268040000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-26804 on Ubuntu 16.04 LTS (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: net:ip_tunnel: prevent perpetual headroom growth syzkaller triggered followingkasan splat: BUG: KASAN: use-after-free in __skb_flow_dissect+0x19d1/0x7a50net/core/flow_dissector.c:1170 Read of size 1 at addr ffff88812fb4000e bytask syz-executor183/5191 [..] kasan_report+0xda/0x110mm/kasan/report.c:588 __skb_flow_dissect+0x19d1/0x7a50net/core/flow_dissector.c:1170 skb_flow_dissect_flow_keysinclude/linux/skbuff.h:1514 [inline] ___skb_get_hashnet/core/flow_dissector.c:1791 [inline] __skb_get_hash+0xc7/0x540net/core/flow_dissector.c:1856 skb_get_hash include/linux/skbuff.h:1556[inline] ip_tunnel_xmit+0x1855/0x33c0 net/ipv4/ip_tunnel.c:748ipip_tunnel_xmit+0x3cc/0x4e0 net/ipv4/ipip.c:308 __netdev_start_xmitinclude/linux/netdevice.h:4940 [inline] netdev_start_xmitinclude/linux/netdevice.h:4954 [inline] xmit_one net/core/dev.c:3548[inline] dev_hard_start_xmit+0x13d/0x6d0 net/core/dev.c:3564__dev_queue_xmit+0x7c1/0x3d60 net/core/dev.c:4349 dev_queue_xmitinclude/linux/netdevice.h:3134 [inline] neigh_connected_output+0x42c/0x5d0net/core/neighbour.c:1592 ... ip_finish_output2+0x833/0x2550net/ipv4/ip_output.c:235 ip_finish_output+0x31/0x310net/ipv4/ip_output.c:323 .. iptunnel_xmit+0x5b4/0x9b0net/ipv4/ip_tunnel_core.c:82 ip_tunnel_xmit+0x1dbc/0x33c0net/ipv4/ip_tunnel.c:831 ipgre_xmit+0x4a1/0x980 net/ipv4/ip_gre.c:665__netdev_start_xmit include/linux/netdevice.h:4940 [inline]netdev_start_xmit include/linux/netdevice.h:4954 [inline] xmit_onenet/core/dev.c:3548 [inline] dev_hard_start_xmit+0x13d/0x6d0net/core/dev.c:3564 ... The splat occurs because skb->data points pastskb->head allocated area. This is because neigh layer does: __skb_pull(skb,skb_network_offset(skb)); ... but skb_network_offset() returns a negativeoffset and __skb_pull() arg is unsigned. IOW, we skb->data gets \"adjusted\"by a huge value. The negative value is returned because skb->head andskb->data distance is more than 64k and skb->network_header (u16) haswrapped around. The bug is in the ip_tunnel infrastructure, which can causedev->needed_headroom to increment ad infinitum. The syzkaller reproducerconsists of packets getting routed via a gre tunnel, and route of greencapsulated packets pointing at another (ipip) tunnel. The ipipencapsulation finds gre0 as next output device. This results in thefollowing pattern: 1). First packet is to be sent out via gre0. Routelookup found an output device, ipip0. 2). ip_tunnel_xmit for gre0 bumpsgre0->needed_headroom based on the future output device,rt.dev->needed_headroom (ipip0). 3). ip output / start_xmit moves skb on toipip0. which runs the same code path again (xmit recursion). 4). Routingstep for the post-gre0-encap packet finds gre0 as output device to use foripip0 encapsulated packet. tunl0->needed_headroom is then incremented basedon the (already bumped) gre0 device headroom. This repeats for every futurepacket: gre0->needed_headroom gets inflated because previous packets' ipip0step incremented rt->dev (gre0) headroom, and ipip0 incremented becausegre0 needed_headroom was increased. For each subsequent packet,gre/ipip0->needed_headroom grows until post-expand-head reallocationsresult in a skb->head/data distance of more than 64k. Once that happens,skb->network_header (u16) wraps around when pskb_expand_head tries to makesure that skb_network_offset() is unchanged after the headroomexpansion/reallocation. After this skb_network_offset(skb) returns adifferent (and negative) result post headroom expansion. The next trip toneigh layer (or anything else that would __skb_pull the network header)makes skb->data point to a memory location outside skb->head area. v2: Capthe needed_headroom update to an arbitarily chosen upperlimit to preventperpetual increase instead of dropping the headroom increment completely.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 LTS"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-26804",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-26804"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-04-04 09:15:00 UTC",
			"cve": {
				"text": "CVE-2024-26804",
				"href": "https://ubuntu.com/security/CVE-2024-26804",
				"public": "20240404"
			},
			"public_date_at_usn": "2024-04-04 09:15:00 UTC",
			"ref": [
				"https://ubuntu.com/security/notices/USN-6820-1",
				"https://ubuntu.com/security/notices/USN-6821-1"
			]
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201245420000000",
						"comment": "linux package in xenial is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201245420000040",
						"comment": "linux-hwe package in xenial is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201245420000070",
						"comment": "linux-kvm package in xenial is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201245420000030",
						"comment": "linux-aws package in xenial is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201245420000080",
						"comment": "linux-aws-hwe package in xenial is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201245420000050",
						"comment": "linux-azure package in xenial is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201245420000060",
						"comment": "linux-gcp package in xenial is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201245420000090",
						"comment": "linux-oracle package in xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
