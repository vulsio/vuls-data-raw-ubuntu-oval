{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2019167860000000",
	"version": "1",
	"metadata": {
		"Title": "CVE-2019-16786 on Ubuntu 16.04 ESM (xenial) - low",
		"Description": "Waitress through version 1.3.1 would parse the Transfer-Encoding header andonly look for a single string value, if that value was not chunked it wouldfall through and use the Content-Length header instead. According to theHTTP standard Transfer-Encoding should be a comma separated list, with theinner-most encoding first, followed by any further transfer codings, endingwith chunked. Requests sent with: \"Transfer-Encoding: gzip, chunked\" wouldincorrectly get ignored, and the request would use a Content-Length headerinstead to determine the body size of the HTTP message. This could allowfor Waitress to treat a single request as multiple requests in the case ofHTTP pipelining. This issue is fixed in Waitress 1.4.0.",
		"affected": {
			"family": "unix",
			"Platform": "Ubuntu 16.04 ESM"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2019-16786",
			"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16786"
		},
		"advisory": {
			"Severity": "Low",
			"Rights": "Copyright (C) 2019 Canonical Ltd.",
			"PublicDate": "2019-12-20 23:15:00 UTC",
			"Bug": [
				"https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=947306"
			],
			"cve": {
				"text": "CVE-2019-16786",
				"href": "https://ubuntu.com/security/CVE-2019-16786",
				"public": "20191220",
				"cvss_score": "7.5",
				"cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
			},
			"PublicDateAtUsn": "",
			"AssignedTo": "",
			"DiscoveredBy": "",
			"Crd": "",
			"Ref": null
		}
	},
	"notes": {
		"Note": ""
	},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:2019167850000000",
						"comment": "waitress: while related to the CVE in some way, a decision has been made to ignore this issue (note: 'end of standard support, was needed')."
					}
				]
			}
		]
	}
}
