{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2022487970000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2022-48797 on Ubuntu 16.04 FIPS Compliant (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:mm: don't try to NUMA-migrate COW pages that have other usesOded Gabbay reports that enabling NUMA balancing causes corruption withhis Gaudi accelerator test load: \"All the details are in the bug, but the bottom line is that somehow,  this patch causes corruption when the numa balancing feature is  enabled AND we don't use process affinity AND we use GUP to pin pages  so our accelerator can DMA to/from system memory.  Either disabling numa balancing, using process affinity to bind to  specific numa-node or reverting this patch causes the bug to  disappear\"and Oded bisected the issue to commit 09854ba94c6a (\"mm: do_wp_page()simplification\").Now, the NUMA balancing shouldn't actually be changing the writabilityof a page, and as such shouldn't matter for COW.  But it appears itdoes.  Suspicious.However, regardless of that, the condition for enabling NUMA faults inchange_pte_range() is nonsensical.  It uses \"page_mapcount(page)\" todecide if a COW page should be NUMA-protected or not, and that makesabsolutely no sense.The number of mappings a page has is irrelevant: not only does GUP get areference to a page as in Oded's case, but the other mappings migth bepaged out and the only reference to them would be in the page count.Since we should never try to NUMA-balance a page that we can't moveanyway due to other references, just fix the code to use 'page_count()'.Oded confirms that that fixes his issue.Now, this does imply that something in NUMA balancing ends up changingpage protections (other than the obvious one of making the pageinaccessible to get the NUMA faulting information).  Otherwise the COWsimplification wouldn't matter - since doing the GUP on the page wouldmake sure it's writable.The cause of that permission change would be good to figure out too,since it clearly results in spurious COW events - but fixing thenonsensical test that just happened to work before is obviously theCorrectThing(tm) to do regardless.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Compliant"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2022-48797",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2022-48797"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-07-16 12:15:00 UTC",
			"cve": {
				"text": "CVE-2022-48797",
				"href": "https://ubuntu.com/security/CVE-2022-48797",
				"public": "20240716"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips package in fips-updates/xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
