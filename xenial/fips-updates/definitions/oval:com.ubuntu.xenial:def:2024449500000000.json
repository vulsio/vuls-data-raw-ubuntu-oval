{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2024449500000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-44950 on Ubuntu 16.04 FIPS Compliant (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:serial: sc16is7xx: fix invalid FIFO access with special register setWhen enabling access to the special register set, Receiver time-out andRHR interrupts can happen. In this case, the IRQ handler will try to readfrom the FIFO thru the RHR register at address 0x00, but address 0x00 ismapped to DLL register, resulting in erroneous FIFO reading.Call graph example:    sc16is7xx_startup(): entry    sc16is7xx_ms_proc(): entry    sc16is7xx_set_termios(): entry    sc16is7xx_set_baud(): DLH/DLL = $009C --> access special register set    sc16is7xx_port_irq() entry            --> IIR is 0x0C    sc16is7xx_handle_rx() entry    sc16is7xx_fifo_read(): --> unable to access FIFO (RHR) because it is                               mapped to DLL (LCR=LCR_CONF_MODE_A)    sc16is7xx_set_baud(): exit --> Restore access to general register setFix the problem by claiming the efr_lock mutex when accessing the Specialregister set.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Compliant"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-44950",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-44950"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-09-05",
			"cve": {
				"text": "CVE-2024-44950",
				"href": "https://ubuntu.com/security/CVE-2024-44950",
				"public": "20240905"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201245420000100",
						"comment": "linux-fips: while related to the CVE in some way, a decision has been made to ignore this issue (note: 'ESM criteria, was needed')."
					}
				]
			}
		]
	}
}
