{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2021474210000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2021-47421 on Ubuntu 16.04 FIPS Compliant (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:drm/amdgpu: handle the case of pci_channel_io_frozen only inamdgpu_pci_resumeIn current code, when a PCI error state pci_channel_io_normal is detectd,it will report PCI_ERS_RESULT_CAN_RECOVER status to PCI driver, and PCIdriver will continue the execution of PCI resume callback report_resume bypci_walk_bridge, and the callback will go into amdgpu_pci_resumefinally, where write lock is releasd unconditionally without acquiringsuch lock first. In this case, a deadlock will happen when other threadsstart to acquire the read lock.To fix this, add a member in amdgpu_device strucutre to cachepci_channel_state, and only continue the execution in amdgpu_pci_resumewhen it's pci_channel_io_frozen.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Compliant"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2021-47421",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2021-47421"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-21 15:15:00 UTC",
			"cve": {
				"text": "CVE-2021-47421",
				"href": "https://ubuntu.com/security/CVE-2021-47421",
				"public": "20240521"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips package in fips-updates/xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
