{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2022487070000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2022-48707 on Ubuntu 16.04 FIPS Compliant (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:cxl/region: Fix null pointer dereference for resetting decoderNot all decoders have a reset callback.The CXL specification allows a host bridge with a single root port tohave no explicit HDM decoders. Currently the region driver assumes thereare none.  As such the CXL core creates a special pass through decoderinstance without a commit/reset callback.Prior to this patch, the ->reset() callback was called unconditionally whencalling cxl_region_decode_reset. Thus a configuration with 1 Host Bridge,1 Root Port, and one directly attached CXL type 3 device or multiple CXLtype 3 devices attached to downstream ports of a switch can cause a nullpointer dereference.Before the fix, a kernel crash was observed when we destroy the region, anda pass through decoder is reset.The issue can be reproduced as below,    1) create a region with a CXL setup which includes a HB with a    single root port under which a memdev is attached directly.    2) destroy the region with cxl destroy-region regionX -f.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Compliant"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2022-48707",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2022-48707"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-21 16:15:00 UTC",
			"cve": {
				"text": "CVE-2022-48707",
				"href": "https://ubuntu.com/security/CVE-2022-48707",
				"public": "20240521"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips package in fips-updates/xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
