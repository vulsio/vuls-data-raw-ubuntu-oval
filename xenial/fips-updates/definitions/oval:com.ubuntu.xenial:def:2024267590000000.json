{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.xenial:def:2024267590000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-26759 on Ubuntu 16.04 FIPS Compliant (xenial) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:mm/swap: fix race when skipping swapcache When skipping swapcache forSWP_SYNCHRONOUS_IO, if two or more threads swapin the same entry at thesame time, they get different pages (A, B). Before one thread (T0) finishesthe swapin and installs page (A) to the PTE, another thread (T1) couldfinish swapin of page (B), swap_free the entry, then swap out the possiblymodified page reusing the same entry. It breaks the pte_same check in (T0)because PTE value is unchanged, causing ABA problem. Thread (T0) willinstall a stalled page (A) into the PTE and cause data corruption. Onepossible callstack is like this: CPU0 CPU1 ---- ---- do_swap_page()do_swap_page() with same entry <direct swapin path> <direct swapin path><alloc page A> <alloc page B> swap_read_folio() <- read to page Aswap_read_folio() <- read to page B <slow on later locks or interrupt><finished swapin first> ... set_pte_at() swap_free() <- entry is free<write to page B, now page A stalled> <swap out page B to same swap entry>pte_same() <- Check pass, PTE seems unchanged, but page A is stalled!swap_free() <- page B content lost! set_pte_at() <- staled page Ainstalled! And besides, for ZRAM, swap_free() allows the swap device todiscard the entry content, so even if page (B) is not modified, ifswap_read_folio() on CPU0 happens later than swap_free() on CPU1, it mayalso cause data loss. To fix this, reuse swapcache_prepare which will pinthe swap entry using the cache flag, and allow only one thread to swap itin, also prevent any parallel code from putting the entry in the cache.Release the pin after PT unlocked. Racers just loop and wait since it's arare and very short event. A schedule_timeout_uninterruptible(1) call isadded to avoid repeated page faults wasting too much CPU, causing livelockor adding too much noise to perf statistics. A similar livelock issue wasdescribed in commit 029c4628b2eb (\"mm: swap: get rid of livelock in swapinreadahead\") Reproducer: This race issue can be triggered easily using awell constructed reproducer and patched brd (with a delay in read path)[1]: With latest 6.8 mainline, race caused data loss can be observedeasily: $ gcc -g -lpthread test-thread-swap-race.c && ./a.out Polulating32MB of memory region... Keep swapping out... Starting round 0... Spawning65536 workers... 32746 workers spawned, wait for done... Round 0: Error on0x5aa00, expected 32746, got 32743, 3 data loss! Round 0: Error on0x395200, expected 32746, got 32743, 3 data loss! Round 0: Error on0x3fd000, expected 32746, got 32737, 9 data loss! Round 0 Failed, 15 dataloss! This reproducer spawns multiple threads sharing the same memoryregion using a small swap device. Every two threads updates mapped pagesone by one in opposite direction trying to create a race, with onededicated thread keep swapping out the data out using madvise. Thereproducer created a reproduce rate of about once every 5 minutes, so therace should be totally possible in production. After this patch, I ran thereproducer for over a few hundred rounds and no data loss observed.Performance overhead is minimal, microbenchmark swapin 10G from 32G zram:Before: 10934698 us After: 11157121 us Cached: 13155355 us (DroppingSWP_SYNCHRONOUS_IO flag) [kasong@tencent.com: v4] Link:https://lkml.kernel.org/r/20240219082040.7495-1-ryncsn@gmail.com",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 16.04 FIPS Compliant"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-26759",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-26759"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-04-03 17:15:00 UTC",
			"cve": {
				"text": "CVE-2024-26759",
				"href": "https://ubuntu.com/security/CVE-2024-26759",
				"public": "20240403"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.xenial:tst:201585530000000",
						"comment": "linux-fips package in fips-updates/xenial is affected and may need fixing."
					}
				]
			}
		]
	}
}
