{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.focal:def:2024453370000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-45337 on Ubuntu 20.04 LTS (focal) - medium",
		"description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallbackcallback may be susceptible to an authorization bypass. The documentationfor ServerConfig.PublicKeyCallback says that \"A call to this function doesnot guarantee that the key offered is in fact used to authenticate.\"Specifically, the SSH protocol allows clients to inquire about whether apublic key is acceptable before proving control of the correspondingprivate key. PublicKeyCallback may be called with multiple keys, and theorder in which the keys were provided cannot be used to infer which key theclient successfully authenticated with, if any. Some applications, whichstore the key(s) passed to PublicKeyCallback (or derived information) andmake security relevant determinations based on it once the connection isestablished, may make incorrect assumptions. For example, an attacker maysend public keys A and B, and then authenticate with A. PublicKeyCallbackwould be called only twice, first with A and then with B. A vulnerableapplication may then make authorization decisions based on key B for whichthe attacker does not actually control the private key. Since this API iswidely misused, as a partial mitigation golang.org/x/cry...@v0.31.0enforces the property that, when successfully authenticating via publickey, the last key passed to ServerConfig.PublicKeyCallback will be the keyused to authenticate the connection. PublicKeyCallback will now be calledmultiple times with the same key, if necessary. Note that the client maystill not control the last key passed to PublicKeyCallback if theconnection is then authenticated with a different method, such asPasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Usersshould be using the Extensions field of the Permissions return value fromthe various authentication callbacks to record data associated with theauthentication attempt instead of referencing external state. Once theconnection is established the state corresponding to the successfulauthentication attempt can be retrieved via the ServerConn.Permissionsfield. Note that some third-party libraries misuse the Permissions type bysharing it across authentication attempts; users of third-party librariesshould refer to the relevant projects for guidance.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 20.04 LTS"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-45337",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-45337"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-12-12 02:02:00 UTC",
			"bug": [
				"http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1089754"
			],
			"cve": {
				"text": "CVE-2024-45337",
				"href": "https://ubuntu.com/security/CVE-2024-45337",
				"public": "20241212"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.focal:tst:2020296520000000",
						"comment": "golang-go.crypto package in focal is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.focal:tst:201732040000010",
						"comment": "snapd package in focal is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.focal:tst:2024453370000000",
						"comment": "lxd package in focal is affected and may need fixing."
					}
				]
			}
		]
	}
}
