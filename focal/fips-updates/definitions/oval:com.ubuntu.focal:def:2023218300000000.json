{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.focal:def:2023218300000000",
	"version": "1",
	"metadata": {
		"Title": "CVE-2023-21830 on Ubuntu 20.04 FIPS Compliant (focal) - medium.",
		"Description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Serialization). Supported versions that are affected are Oracle Java SE: 8u351, 8u351-perf; Oracle GraalVM Enterprise Edition: 20.3.8 and 21.3.4. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N). It was discovered that the Serialization component of OpenJDK did not properly handle the deserialization of some CORBA objects. An attacker could possibly use this to bypass Java sandbox restrictions.\n\nUpdate Instructions:\n\nRun `sudo pro fix CVE-2023-21830` to fix the vulnerability. The problem can be corrected\nby updating your system to the following package versions:\n\nopenjdk-8-demo - 8u362-ga-0ubuntu1~20.04.1\nopenjdk-8-jdk - 8u362-ga-0ubuntu1~20.04.1\nopenjdk-8-jdk-headless - 8u362-ga-0ubuntu1~20.04.1\nopenjdk-8-jre - 8u362-ga-0ubuntu1~20.04.1\nopenjdk-8-jre-headless - 8u362-ga-0ubuntu1~20.04.1\nopenjdk-8-jre-zero - 8u362-ga-0ubuntu1~20.04.1\nopenjdk-8-source - 8u362-ga-0ubuntu1~20.04.1\nNo subscription required",
		"affected": {
			"family": "unix",
			"Platform": "Ubuntu 20.04 FIPS Compliant"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2023-21830",
			"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-21830"
		},
		"advisory": {
			"Severity": "Medium",
			"Rights": "Copyright (C) 2023 Canonical Ltd.",
			"PublicDate": "2023-01-18 00:15:00 UTC",
			"Bug": null,
			"cve": {
				"text": "CVE-2023-21830",
				"href": "https://ubuntu.com/security/CVE-2023-21830",
				"public": "20230118",
				"cvss_score": "5.3",
				"cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
				"usns": "5898-1"
			},
			"PublicDateAtUsn": "2023-01-18 00:15:00 UTC",
			"AssignedTo": "",
			"DiscoveredBy": "thiscodecc of MoyunSec TopBreaker Labs",
			"Crd": "",
			"Ref": null
		}
	},
	"notes": {
		"Note": "mdeslaur> only affects openjdk-8 sbeattie> from the upstream release notes: The readObject method of _DynAnyFactoryStub has been amended, such that, when reading the stringified IOR from serialized data, it will, by default, accept stringified IORs in IOR: URI format, only. As DynAnyFactory is a locally or ORB constrained type, it is not useful that serialized data should contain corbaname or corbaloc URIs. Furthermore, an ORB will prohibit the binding of a name in the INS to a DynAnyFactory IOR, as such, using a corbaname to reference an instance of DynAnyFactory is not meaningful."
	},
	"criteria": {
		"criterions": [
			{
				"test_ref": "oval:com.ubuntu.focal:tst:2023218300000000",
				"comment": "openjdk-8 package in focal was vulnerable but has been fixed (note: '8u362-ga-0ubuntu1~20.04.1')."
			}
		]
	}
}
