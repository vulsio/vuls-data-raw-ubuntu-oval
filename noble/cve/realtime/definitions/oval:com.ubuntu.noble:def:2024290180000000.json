{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.noble:def:2024290180000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-29018 on Ubuntu 24.04 LTS (noble) - medium",
		"description": "Moby is an open source container framework that is a key component ofDocker Engine, Docker Desktop, and other distributions of container toolingor runtimes. Moby's networking implementation allows for many networks,each with their own IP address range and gateway, to be defined. Thisfeature is frequently referred to as custom networks, as each network canhave a different driver, set of parameters and thus behaviors. Whencreating a network, the `--internal` flag is used to designate a network as_internal_. The `internal` attribute in a docker-compose.yml file may alsobe used to mark a network _internal_, and other API clients may specify the`internal` parameter as well. When containers with networking are created,they are assigned unique network interfaces and IP addresses. The hostserves as a router for non-internal networks, with a gateway IP thatprovides SNAT/DNAT to/from container IPs. Containers on an internal networkmay communicate between each other, but are precluded from communicatingwith any networks the host has access to (LAN or WAN) as no default routeis configured, and firewall rules are set up to drop all outgoing traffic.Communication with the gateway IP address (and thus appropriatelyconfigured host services) is possible, and the host may communicate withany container IP directly. In addition to configuring the Linux kernel'svarious networking features to enable container networking, `dockerd`directly provides some services to container networks. Principal amongthese is serving as a resolver, enabling service discovery, and resolutionof names from an upstream resolver. When a DNS request for a name that doesnot correspond to a container is received, the request is forwarded to theconfigured upstream resolver. This request is made from the container'snetwork namespace: the level of access and routing of traffic is the sameas if the request was made by the container itself. As a consequence ofthis design, containers solely attached to an internal network will beunable to resolve names using the upstream resolver, as the containeritself is unable to communicate with that nameserver. Only the names ofcontainers also attached to the internal network are able to be resolved.Many systems run a local forwarding DNS resolver. As the host and anycontainers have separate loopback devices, a consequence of the designdescribed above is that containers are unable to resolve names from thehost's configured resolver, as they cannot reach these addresses on thehost loopback device. To bridge this gap, and to allow containers toproperly resolve names even when a local forwarding resolver is used on aloopback address, `dockerd` detects this scenario and instead forward DNSrequests from the host namework namespace. The loopback resolver thenforwards the requests to its configured upstream resolvers, as expected.Because `dockerd` forwards DNS requests to the host loopback device,bypassing the container network namespace's normal routing semanticsentirely, internal networks can unexpectedly forward DNS requests to anexternal nameserver. By registering a domain for which they control theauthoritative nameservers, an attacker could arrange for a compromisedcontainer to exfiltrate data by encoding it in DNS queries that willeventually be answered by their nameservers. Docker Desktop is notaffected, as Docker Desktop always runs an internal resolver on a RFC 1918address. Moby releases 26.0.0, 25.0.4, and 23.0.11 are patched to preventforwarding any DNS requests from internal networks. As a workaround, runcontainers intended to be solely attached to internal networks with acustom upstream address, which will force all upstream DNS queries to beresolved from the container's network namespace.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 24.04 LTS"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-29018",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-29018"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-03-20 21:15:00 UTC",
			"bug": [
				"http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1068460"
			],
			"cve": {
				"text": "CVE-2024-29018",
				"href": "https://ubuntu.com/security/CVE-2024-29018",
				"public": "20240320"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.noble:tst:2024236500000000",
						"comment": "docker.io-app package in noble is affected and needs fixing."
					}
				]
			}
		]
	}
}
