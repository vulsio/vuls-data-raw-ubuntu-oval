{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.noble:def:2024269600000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-26960 on Ubuntu 24.04 LTS (noble) - high",
		"description": "In the Linux kernel, the following vulnerability has been resolved: mm:swap: fix race between free_swap_and_cache() and swapoff() There waspreviously a theoretical window where swapoff() could run and teardown aswap_info_struct while a call to free_swap_and_cache() was running inanother thread. This could cause, amongst other bad possibilities,swap_page_trans_huge_swapped() (called by free_swap_and_cache()) to accessthe freed memory for swap_map. This is a theoretical problem and I haven'tbeen able to provoke it from a test case. But there has been agreementbased on code review that this is possible (see link below). Fix it byusing get_swap_device()/put_swap_device(), which will stall swapoff().There was an extra check in _swap_info_get() to confirm that the swap entrywas not free. This isn't present in get_swap_device() because it doesn'tmake sense in general due to the race between getting the reference andswapoff. So I've added an equivalent check directly infree_swap_and_cache(). Details of how to provoke one possible issue (thanksto David Hildenbrand for deriving this): --8<----- __swap_entry_free()might be the last user and result in \"count == SWAP_HAS_CACHE\".swapoff->try_to_unuse() will stop as soon as soon as si->inuse_pages==0. Sothe question is: could someone reclaim the folio and turnsi->inuse_pages==0, before we completed swap_page_trans_huge_swapped().Imagine the following: 2 MiB folio in the swapcache. Only 2 subpages arestill references by swap entries. Process 1 still references subpage 0 viaswap entry. Process 2 still references subpage 1 via swap entry. Process 1quits. Calls free_swap_and_cache(). -> count == SWAP_HAS_CACHE [then,preempted in the hypervisor etc.] Process 2 quits. Callsfree_swap_and_cache(). -> count == SWAP_HAS_CACHE Process 2 goes ahead,passes swap_page_trans_huge_swapped(), and calls __try_to_reclaim_swap().__try_to_reclaim_swap()->folio_free_swap()->delete_from_swap_cache()->put_swap_folio()->free_swap_slot()->swapcache_free_entries()->swap_entry_free()->swap_range_free()-> ... WRITE_ONCE(si->inuse_pages,si->inuse_pages - nr_entries); What stops swapoff to succeed after process2 reclaimed the swap cache but before process1 finished its call toswap_page_trans_huge_swapped()? --8<-----\n\n    Update Instructions:\n\n    Run `sudo pro fix CVE-2024-26960` to fix the vulnerability. The problem can be corrected\n    by updating your system to the following package versions:\n\nlinux-image-6.8.0-35-generic - 6.8.0-35.35\nlinux-image-unsigned-6.8.0-35-generic - 6.8.0-35.35\nlinux-image-unsigned-6.8.0-35-generic-64k - 6.8.0-35.35\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1009-aws - 6.8.0-1009.9\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1008-azure - 6.8.0-1008.8\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1008-gcp - 6.8.0-1008.9\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1004-gke - 6.8.0-1004.7\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1006-ibm - 6.8.0-1006.6\nNo subscription required\n\nlinux-image-unsigned-6.8.0-35-lowlatency - 6.8.0-35.35.1\nlinux-image-unsigned-6.8.0-35-lowlatency-64k - 6.8.0-35.35.1\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1006-oracle - 6.8.0-1006.6\nlinux-image-unsigned-6.8.0-1006-oracle-64k - 6.8.0-1006.6\nNo subscription required\n\nlinux-image-6.8.0-1005-raspi - 6.8.0-1005.5\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1006-oem - 6.8.0-1006.6\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1005-intel - 6.8.0-1005.12\nNo subscription required",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 24.04 LTS"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-26960",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-26960"
		},
		"advisory": {
			"severity": "High",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-01 06:15:00 UTC",
			"cve": {
				"text": "CVE-2024-26960",
				"href": "https://ubuntu.com/security/CVE-2024-26960",
				"public": "20240501"
			},
			"public_date_at_usn": "2024-05-01 06:15:00 UTC",
			"ref": [
				"https://ubuntu.com/security/notices/USN-6816-1",
				"https://ubuntu.com/security/notices/USN-6817-1",
				"https://ubuntu.com/security/notices/USN-6817-2",
				"https://ubuntu.com/security/notices/USN-6817-3",
				"https://ubuntu.com/security/notices/USN-6878-1",
				"https://ubuntu.com/security/notices/USN-6898-1",
				"https://ubuntu.com/security/notices/USN-6898-2",
				"https://ubuntu.com/security/notices/USN-6898-3",
				"https://ubuntu.com/security/notices/USN-6898-4",
				"https://ubuntu.com/security/notices/USN-6917-1",
				"https://ubuntu.com/security/notices/USN-6919-1",
				"https://ubuntu.com/security/notices/USN-6927-1",
				"https://ubuntu.com/security/notices/USN-7019-1"
			]
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.noble:tst:2022380960000000",
						"comment": "linux package in noble was vulnerable but has been fixed (note: '6.8.0-35.35')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:2022380960000010",
						"comment": "linux-aws package in noble was vulnerable but has been fixed (note: '6.8.0-1009.9')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:2022380960000020",
						"comment": "linux-azure package in noble was vulnerable but has been fixed (note: '6.8.0-1008.8')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:2022380960000030",
						"comment": "linux-gcp package in noble was vulnerable but has been fixed (note: '6.8.0-1008.9')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:2022380960000040",
						"comment": "linux-gke package in noble was vulnerable but has been fixed (note: '6.8.0-1004.7')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:2022380960000050",
						"comment": "linux-ibm package in noble was vulnerable but has been fixed (note: '6.8.0-1006.6')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:2022380960000060",
						"comment": "linux-lowlatency package in noble was vulnerable but has been fixed (note: '6.8.0-35.35.1')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:2022380960000050",
						"comment": "linux-oracle package in noble was vulnerable but has been fixed (note: '6.8.0-1006.6')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:2022380960000070",
						"comment": "linux-raspi package in noble was vulnerable but has been fixed (note: '6.8.0-1005.5')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:2022380960000050",
						"comment": "linux-oem-6.8 package in noble was vulnerable but has been fixed (note: '6.8.0-1006.6')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:2022380960000080",
						"comment": "linux-intel package in noble, is related to the CVE in some way and has been fixed (note: '6.8.0-1005.12')."
					}
				]
			}
		]
	}
}
