{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.noble:def:2024267270000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-26727 on Ubuntu 24.04 LTS. (noble) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:btrfs: do not ASSERT() if the newly created subvolume already got read[BUG]There is a syzbot crash, triggered by the ASSERT() during subvolumecreation: assertion failed: !anon_dev, in fs/btrfs/disk-io.c:1319 ------------[ cut here ]------------ kernel BUG at fs/btrfs/disk-io.c:1319! invalid opcode: 0000 [#1] PREEMPT SMP KASAN RIP: 0010:btrfs_get_root_ref.part.0+0x9aa/0xa60  <TASK>  btrfs_get_new_fs_root+0xd3/0xf0  create_subvol+0xd02/0x1650  btrfs_mksubvol+0xe95/0x12b0  __btrfs_ioctl_snap_create+0x2f9/0x4f0  btrfs_ioctl_snap_create+0x16b/0x200  btrfs_ioctl+0x35f0/0x5cf0  __x64_sys_ioctl+0x19d/0x210  do_syscall_64+0x3f/0xe0  entry_SYSCALL_64_after_hwframe+0x63/0x6b ---[ end trace 0000000000000000 ]---[CAUSE]During create_subvol(), after inserting root item for the newly createdsubvolume, we would trigger btrfs_get_new_fs_root() to get thebtrfs_root of that subvolume.The idea here is, we have preallocated an anonymous device number forthe subvolume, thus we can assign it to the new subvolume.But there is really nothing preventing things like backref walk to readthe new subvolume.If that happens before we call btrfs_get_new_fs_root(), the subvolumewould be read out, with a new anonymous device number assigned already.In that case, we would trigger ASSERT(), as we really expect no one toread out that subvolume (which is not yet accessible from the fs).But things like backref walk is still possible to trigger the read onthe subvolume.Thus our assumption on the ASSERT() is not correct in the first place.[FIX]Fix it by removing the ASSERT(), and just free the @anon_dev, reset itto 0, and continue.If the subvolume tree is read out by something else, it should havealready get a new anon_dev assigned thus we only need to free thepreallocated one.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 24.04 LTS."
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-26727",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-26727"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-04-03 15:15:00 UTC",
			"cve": {
				"text": "CVE-2024-26727",
				"href": "https://ubuntu.com/security/CVE-2024-26727",
				"public": "20240403"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000000",
						"comment": "linux package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000010",
						"comment": "linux-aws package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000020",
						"comment": "linux-azure package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000030",
						"comment": "linux-gcp package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000060",
						"comment": "linux-ibm package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000070",
						"comment": "linux-lowlatency package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000040",
						"comment": "linux-oracle package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000050",
						"comment": "linux-raspi package in noble is affected and may need fixing."
					}
				]
			}
		]
	}
}
