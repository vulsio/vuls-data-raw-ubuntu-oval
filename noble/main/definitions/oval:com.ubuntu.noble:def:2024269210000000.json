{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.noble:def:2024269210000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-26921 on Ubuntu 24.04 LTS. (noble) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:inet: inet_defrag: prevent sk release while still in useip_local_out() and other functions can pass skb->sk as function argument.If the skb is a fragment and reassembly happens before such function callreturns, the sk must not be released.This affects skb fragments reassembled via netfilter or similarmodules, e.g. openvswitch or ct_act.c, when run as part of tx pipeline.Eric Dumazet made an initial analysis of this bug.  Quoting Eric:  Calling ip_defrag() in output path is also implying skb_orphan(),  which is buggy because output path relies on sk not disappearing.  A relevant old patch about the issue was :  8282f27449bf (\"inet: frag: Always orphan skbs inside ip_defrag()\")  [..]  net/ipv4/ip_output.c depends on skb->sk being set, and probably to an  inet socket, not an arbitrary one.  If we orphan the packet in ipvlan, then downstream things like FQ  packet scheduler will not work properly.  We need to change ip_defrag() to only use skb_orphan() when really  needed, ie whenever frag_list is going to be used.Eric suggested to stash sk in fragment queue and made an initial patch.However there is a problem with this:If skb is refragmented again right after, ip_do_fragment() will copyhead->sk to the new fragments, and sets up destructor to sock_wfree.IOW, we have no choice but to fix up sk_wmem accouting to reflect thefully reassembled skb, else wmem will underflow.This change moves the orphan down into the core, to last possible moment.As ip_defrag_offset is aliased with sk_buff->sk member, we must move theoffset into the FRAG_CB, else skb->sk gets clobbered.This allows to delay the orphaning long enough to learn if the skb hasto be queued or if the skb is completing the reasm queue.In the former case, things work as before, skb is orphaned.  This issafe because skb gets queued/stolen and won't continue past reasm engine.In the latter case, we will steal the skb->sk reference, reattach it tothe head skb, and fix up wmem accouting when inet_frag inflates truesize.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 24.04 LTS."
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-26921",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-26921"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-04-18 10:15:00 UTC",
			"cve": {
				"text": "CVE-2024-26921",
				"href": "https://ubuntu.com/security/CVE-2024-26921",
				"public": "20240418"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000000",
						"comment": "linux package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000010",
						"comment": "linux-aws package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000020",
						"comment": "linux-azure package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000030",
						"comment": "linux-gcp package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000060",
						"comment": "linux-ibm package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000070",
						"comment": "linux-lowlatency package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000040",
						"comment": "linux-oracle package in noble is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201245420000050",
						"comment": "linux-raspi package in noble is affected and may need fixing."
					}
				]
			}
		]
	}
}
