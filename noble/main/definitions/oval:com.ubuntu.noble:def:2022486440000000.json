{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.noble:def:2022486440000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2022-48644 on Ubuntu 24.04 LTS (noble) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:net/sched: taprio: avoid disabling offload when it was never enabled In anincredibly strange API design decision, qdisc->destroy() gets called evenif qdisc->init() never succeeded, not exclusively since commit 87b60cfacf9f(\"net_sched: fix error recovery at qdisc creation\"), but apparently alsoearlier (in the case of qdisc_create_dflt()). The taprio qdisc does notfully acknowledge this when it attempts full offload, because it starts offwith q->flags = TAPRIO_FLAGS_INVALID in taprio_init(), then it replacesq->flags with TCA_TAPRIO_ATTR_FLAGS parsed from netlink (intaprio_change(), tail called from taprio_init()). But in taprio_destroy(),we call taprio_disable_offload(), and this determines what to do based onFULL_OFFLOAD_IS_ENABLED(q->flags). But looking at the implementation ofFULL_OFFLOAD_IS_ENABLED() (a bitwise check of bit 1 in q->flags), it isinvalid to call this macro on q->flags when it containsTAPRIO_FLAGS_INVALID, because that is set to U32_MAX, and thereforeFULL_OFFLOAD_IS_ENABLED() will return true on an invalid set of flags. As aresult, it is possible to crash the kernel if user space forces an errorbetween setting q->flags = TAPRIO_FLAGS_INVALID, and the calling oftaprio_enable_offload(). This is because drivers do not expect the offloadto be disabled when it was never enabled. The error that we force here isto attach taprio as a non-root qdisc, but instead as child of an mqprioroot qdisc: $ tc qdisc add dev swp0 root handle 1: \\ mqprio num_tc 8 map 01 2 3 4 5 6 7 \\ queues 1@0 1@1 1@2 1@3 1@4 1@5 1@6 1@7 hw 0 $ tc qdiscreplace dev swp0 parent 1:1 \\ taprio num_tc 8 map 0 1 2 3 4 5 6 7 \\ queues1@0 1@1 1@2 1@3 1@4 1@5 1@6 1@7 base-time 0 \\ sched-entry S 0x7f 990000sched-entry S 0x80 100000 \\ flags 0x0 clockid CLOCK_TAI Unable to handlekernel paging request at virtual address fffffffffffffff8[fffffffffffffff8] pgd=0000000000000000, p4d=0000000000000000 Internalerror: Oops: 96000004 [#1] PREEMPT SMP Call trace: taprio_dump+0x27c/0x310vsc9959_port_setup_tc+0x1f4/0x460 felix_port_setup_tc+0x24/0x3cdsa_slave_setup_tc+0x54/0x27c taprio_disable_offload.isra.0+0x58/0xe0taprio_destroy+0x80/0x104 qdisc_create+0x240/0x470tc_modify_qdisc+0x1fc/0x6b0 rtnetlink_rcv_msg+0x12c/0x390netlink_rcv_skb+0x5c/0x130 rtnetlink_rcv+0x1c/0x2c Fix this by keepingtrack of the operations we made, and undo the offload only if we actuallydid it. I've added \"bool offloaded\" inside a 4 byte hole between \"intclockid\" and \"atomic64_t picos_per_byte\". Now the first cache line lookslike below: $ pahole -C taprio_sched net/sched/sch_taprio.o structtaprio_sched { struct Qdisc * * qdiscs; /* 0 8 */ struct Qdisc * root; /* 88 */ u32 flags; /* 16 4 */ enum tk_offsets tk_offset; /* 20 4 */ intclockid; /* 24 4 */ bool offloaded; /* 28 1 */ /* XXX 3 bytes hole, try topack */ atomic64_t picos_per_byte; /* 32 0 */ /* XXX 8 bytes hole, try topack */ spinlock_t current_entry_lock; /* 40 0 */ /* XXX 8 bytes hole, tryto pack */ struct sched_entry * current_entry; /* 48 8 */ structsched_gate_list * oper_sched; /* 56 8 */ /* --- cacheline 1 boundary (64bytes) --- */\n\n    Update Instructions:\n\n    Run `sudo pro fix CVE-2022-48644` to fix the vulnerability. The problem can be corrected\n    by updating your system to the following package versions:\n\nlinux-image-6.5.0-9-generic - 6.5.0-9.9\nlinux-image-unsigned-6.5.0-9-generic - 6.5.0-9.9\nlinux-image-unsigned-6.5.0-9-generic-64k - 6.5.0-9.9\nNo subscription required\n\nlinux-image-unsigned-6.5.0-1008-aws - 6.5.0-1008.8\nNo subscription required\n\nlinux-image-unsigned-6.5.0-1007-azure - 6.5.0-1007.7\nNo subscription required\n\nlinux-image-unsigned-6.5.0-1007-gcp - 6.5.0-1007.7\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1003-gke - 6.8.0-1003.5\nNo subscription required\n\nlinux-image-unsigned-6.5.0-1009-ibm - 6.5.0-1009.9\nNo subscription required\n\nlinux-image-unsigned-6.5.0-9-lowlatency - 6.5.0-9.9.1\nlinux-image-unsigned-6.5.0-9-lowlatency-64k - 6.5.0-9.9.1\nNo subscription required\n\nlinux-image-unsigned-6.5.0-1010-oracle - 6.5.0-1010.10\nNo subscription required\n\nlinux-image-6.5.0-1005-raspi - 6.5.0-1005.7\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1003-oem - 6.8.0-1003.3\nNo subscription required\n\nlinux-image-unsigned-6.8.0-1005-intel - 6.8.0-1001.6\nNo subscription required",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 24.04 LTS"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2022-48644",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2022-48644"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-04-28 13:15:00 UTC",
			"cve": {
				"text": "CVE-2022-48644",
				"href": "https://ubuntu.com/security/CVE-2022-48644",
				"public": "20240428"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201499000000000",
						"comment": "linux package in noble, is related to the CVE in some way and has been fixed (note: '6.5.0-9.9')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201499000000010",
						"comment": "linux-aws package in noble, is related to the CVE in some way and has been fixed (note: '6.5.0-1008.8')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201499000000030",
						"comment": "linux-azure package in noble, is related to the CVE in some way and has been fixed (note: '6.5.0-1007.7')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201499000000030",
						"comment": "linux-gcp package in noble, is related to the CVE in some way and has been fixed (note: '6.5.0-1007.7')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201499000000020",
						"comment": "linux-gke package in noble, is related to the CVE in some way and has been fixed (note: '6.8.0-1003.5')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201499000000040",
						"comment": "linux-ibm package in noble, is related to the CVE in some way and has been fixed (note: '6.5.0-1009.9')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201499000000060",
						"comment": "linux-lowlatency package in noble, is related to the CVE in some way and has been fixed (note: '6.5.0-9.9.1')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201499000000070",
						"comment": "linux-oracle package in noble, is related to the CVE in some way and has been fixed (note: '6.5.0-1010.10')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201499000000090",
						"comment": "linux-raspi package in noble, is related to the CVE in some way and has been fixed (note: '6.5.0-1005.7')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201499000000080",
						"comment": "linux-oem-6.8 package in noble, is related to the CVE in some way and has been fixed (note: '6.8.0-1003.3')."
					},
					{
						"test_ref": "oval:com.ubuntu.noble:tst:201499000000050",
						"comment": "linux-intel package in noble, is related to the CVE in some way and has been fixed (note: '6.8.0-1001.6')."
					}
				]
			}
		]
	}
}
