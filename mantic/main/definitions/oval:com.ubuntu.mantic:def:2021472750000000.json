{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.mantic:def:2021472750000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2021-47275 on Ubuntu 23.10 (mantic) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved: bcache:avoid oversized read request in cache missing code path In the cachemissing code path of cached device, if a proper location from the internalB+ tree is matched for a cache miss range, function cached_dev_cache_miss()will be called in cache_lookup_fn() in the following code block, [codeblock 1] 526 unsigned int sectors = KEY_INODE(k) == s->iop.inode 527 ?min_t(uint64_t, INT_MAX, 528 KEY_START(k) - bio->bi_iter.bi_sector) 529 :INT_MAX; 530 int ret = s->d->cache_miss(b, s, bio, sectors); Heres->d->cache_miss() is the call backfunction pointer initialized ascached_dev_cache_miss(), the last parameter 'sectors' is an important hintto calculate the size of read request to backing device of the missingcache data. Current calculation in above code block may generate oversizedvalue of 'sectors', which consequently may trigger 2 different potentialkernel panics by BUG() or BUG_ON() as listed below, 1) BUG_ON() insidebch_btree_insert_key(), [code block 2] 886 BUG_ON(b->ops->is_extents &&!KEY_SIZE(k)); 2) BUG() inside biovec_slab(), [code block 3] 51 default: 52BUG(); 53 return NULL; All the above panics are original fromcached_dev_cache_miss() by the oversized parameter 'sectors'. Insidecached_dev_cache_miss(), parameter 'sectors' is used to calculate the sizeof data read from backing device for the cache missing. This size is storedin s->insert_bio_sectors by the following lines of code, [code block 4] 909s->insert_bio_sectors = min(sectors, bio_sectors(bio) + reada); Then theactual key inserting to the internal B+ tree is generated and stored ins->iop.replace_key by the following lines of code, [code block 5] 911s->iop.replace_key = KEY(s->iop.inode, 912 bio->bi_iter.bi_sector +s->insert_bio_sectors, 913 s->insert_bio_sectors); The oversized parameter'sectors' may trigger panic 1) by BUG_ON() from the above code block. Andthe bio sending to backing device for the missing data is allocated withhint from s->insert_bio_sectors by the following lines of code, [code block6] 926 cache_bio = bio_alloc_bioset(GFP_NOWAIT, 927DIV_ROUND_UP(s->insert_bio_sectors, PAGE_SECTORS), 928&dc->disk.bio_split); The oversized parameter 'sectors' may trigger panic2) by BUG() from the agove code block. Now let me explain how the panicshappen with the oversized 'sectors'. In code block 5, replace_key isgenerated by macro KEY(). From the definition of macro KEY(), [code block7] 71 #define KEY(inode, offset, size) \\ 72 ((struct bkey) { \\ 73 .high =(1ULL << 63) | ((__u64) (size) << 20) | (inode), \\ 74 .low = (offset) \\ 75}) Here 'size' is 16bits width embedded in 64bits member 'high' of structbkey. But in code block 1, if \"KEY_START(k) - bio->bi_iter.bi_sector\" isvery probably to be larger than (1<<16) - 1, which makes the bkey sizecalculation in code block 5 is overflowed. In one bug report the value ofparameter 'sectors' is 131072 (= 1 << 17), the overflowed 'sectors' resultsthe overflowed s->insert_bio_sectors in code block 4, then makes size fieldof s->iop.replace_key to be 0 in code block 5. Then the 0- sizeds->iop.replace_key is inserted into the internal B+ tree as cache missingcheck key (a special key to detect and avoid a racing between normal writerequest and cache missing read request) as, [code block 8] 915 ret =bch_btree_insert_check_key(b, &s->op, &s->iop.replace_key); Then the0-sized s->iop.replace_key as 3rd parameter triggers the bkey size checkBUG_ON() in code block 2, and causes the kernel panic 1). Another ke---truncated---\n\n    Update Instructions:\n\n    Run `sudo pro fix CVE-2021-47275` to fix the vulnerability. The problem can be corrected\n    by updating your system to the following package versions:\n\nlinux-image-6.2.0-20-generic - 6.2.0-20.20\nlinux-image-6.2.0-20-generic-lpae - 6.2.0-20.20\nlinux-image-unsigned-6.2.0-20-generic - 6.2.0-20.20\nlinux-image-unsigned-6.2.0-20-generic-64k - 6.2.0-20.20\nNo subscription required\n\nlinux-image-unsigned-6.2.0-1003-aws - 6.2.0-1003.3\nNo subscription required\n\nlinux-image-unsigned-6.2.0-1003-azure - 6.2.0-1003.3\nNo subscription required\n\nlinux-image-unsigned-6.2.0-1005-gcp - 6.2.0-1005.5\nNo subscription required\n\nlinux-image-6.5.0-1003-laptop - 6.5.0-1003.6\nNo subscription required\n\nlinux-image-unsigned-6.2.0-1003-lowlatency - 6.2.0-1003.3\nlinux-image-unsigned-6.2.0-1003-lowlatency-64k - 6.2.0-1003.3\nNo subscription required\n\nlinux-image-unsigned-6.2.0-1003-oracle - 6.2.0-1003.3\nNo subscription required\n\nlinux-image-6.2.0-1004-raspi - 6.2.0-1004.5\nlinux-image-6.2.0-1004-raspi-nolpae - 6.2.0-1004.5\nNo subscription required\n\nlinux-image-6.5.0-1002-starfive - 6.5.0-1002.3\nNo subscription required",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 23.10"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2021-47275",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2021-47275"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-21 15:15:00 UTC",
			"cve": {
				"text": "CVE-2021-47275",
				"href": "https://ubuntu.com/security/CVE-2021-47275",
				"public": "20240521"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:2016107230000000",
						"comment": "linux package in mantic, is related to the CVE in some way and has been fixed (note: '6.2.0-20.20')."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:2016107230000010",
						"comment": "linux-aws package in mantic, is related to the CVE in some way and has been fixed (note: '6.2.0-1003.3')."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:2016107230000010",
						"comment": "linux-azure package in mantic, is related to the CVE in some way and has been fixed (note: '6.2.0-1003.3')."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:2016107230000020",
						"comment": "linux-gcp package in mantic, is related to the CVE in some way and has been fixed (note: '6.2.0-1005.5')."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:201245420000060",
						"comment": "linux-ibm: while related to the CVE in some way, a decision has been made to ignore this issue (note: 'end of kernel support')."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:2016107230000060",
						"comment": "linux-laptop package in mantic, is related to the CVE in some way and has been fixed (note: '6.5.0-1003.6')."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:2016107230000010",
						"comment": "linux-lowlatency package in mantic, is related to the CVE in some way and has been fixed (note: '6.2.0-1003.3')."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:2016107230000010",
						"comment": "linux-oracle package in mantic, is related to the CVE in some way and has been fixed (note: '6.2.0-1003.3')."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:2016107230000030",
						"comment": "linux-raspi package in mantic, is related to the CVE in some way and has been fixed (note: '6.2.0-1004.5')."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:2016107230000050",
						"comment": "linux-starfive package in mantic, is related to the CVE in some way and has been fixed (note: '6.5.0-1002.3')."
					}
				]
			}
		]
	}
}
