{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.mantic:def:2024359700000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-35970 on Ubuntu 23.10 (mantic) - medium",
		"description": "In the Linux kernel, the following vulnerability has been resolved:af_unix: Clear stale u->oob_skb.syzkaller started to report deadlock of unix_gc_lock after commit4090fa373f0e (\"af_unix: Replace garbage collection algorithm.\"), butit just uncovers the bug that has been there since commit 314001f0bf92(\"af_unix: Add OOB support\").The repro basically does the following.  from socket import *  from array import array  c1, c2 = socketpair(AF_UNIX, SOCK_STREAM)  c1.sendmsg([b'a'], [(SOL_SOCKET, SCM_RIGHTS, array(\"i\", [c2.fileno()]))],MSG_OOB)  c2.recv(1)  # blocked as no normal data in recv queue  c2.close()  # done async and unblock recv()  c1.close()  # done async and trigger GCA socket sends its file descriptor to itself as OOB data and tries toreceive normal data, but finally recv() fails due to async close().The problem here is wrong handling of OOB skb in manage_oob().  Whenrecvmsg() is called without MSG_OOB, manage_oob() is called to checkif the peeked skb is OOB skb.  In such a case, manage_oob() pops itout of the receive queue but does not clear unix_sock(sk)->oob_skb.This is wrong in terms of uAPI.Let's say we send \"hello\" with MSG_OOB, and \"world\" without MSG_OOB.The 'o' is handled as OOB data.  When recv() is called twice withoutMSG_OOB, the OOB data should be lost.  >>> from socket import *  >>> c1, c2 = socketpair(AF_UNIX, SOCK_STREAM, 0)  >>> c1.send(b'hello', MSG_OOB)  # 'o' is OOB data  5  >>> c1.send(b'world')  5  >>> c2.recv(5)  # OOB data is not received  b'hell'  >>> c2.recv(5)  # OOB date is skipped  b'world'  >>> c2.recv(5, MSG_OOB)  # This should return an error  b'o'In the same situation, TCP actually returns -EINVAL for the lastrecv().Also, if we do not clear unix_sk(sk)->oob_skb, unix_poll() always setEPOLLPRI even though the data has passed through by previous recv().To avoid these issues, we must clear unix_sk(sk)->oob_skb when dequeuingit from recv queue.The reason why the old GC did not trigger the deadlock is because theold GC relied on the receive queue to detect the loop.When it is triggered, the socket with OOB data is marked as GC candidatebecause file refcount == inflight count (1).  However, after traversingall inflight sockets, the socket still has a positive inflight count (1),thus the socket is excluded from candidates.  Then, the old GC lose thechance to garbage-collect the socket.With the old GC, the repro continues to create true garbage that willnever be freed nor detected by kmemleak as it's linked to the globalinflight list.  That's why we couldn't even notice the issue.",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 23.10"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-35970",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-35970"
		},
		"advisory": {
			"severity": "Medium",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-05-21",
			"cve": {
				"text": "CVE-2024-35970",
				"href": "https://ubuntu.com/security/CVE-2024-35970",
				"public": "20240521"
			}
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:201245420000000",
						"comment": "linux package in mantic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:201245420000010",
						"comment": "linux-aws package in mantic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:201245420000020",
						"comment": "linux-azure package in mantic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:201245420000030",
						"comment": "linux-gcp package in mantic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:201245420000060",
						"comment": "linux-ibm: while related to the CVE in some way, a decision has been made to ignore this issue (note: 'end of kernel support')."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:201245420000090",
						"comment": "linux-laptop package in mantic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:201245420000070",
						"comment": "linux-lowlatency package in mantic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:201245420000040",
						"comment": "linux-oracle package in mantic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:201245420000050",
						"comment": "linux-raspi package in mantic is affected and may need fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.mantic:tst:201245420000080",
						"comment": "linux-starfive package in mantic is affected and may need fixing."
					}
				]
			}
		]
	}
}
