{
	"class": "vulnerability",
	"id": "oval:com.ubuntu.jammy:def:202455350000000",
	"version": "1",
	"metadata": {
		"title": "CVE-2024-5535 on Ubuntu 22.04 FIPS Compliant (jammy) - low",
		"description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto withanempty supported client protocols buffer may cause a crash or memorycontents tobe sent to the peer.Impact summary: A buffer overread can have a range of potentialconsequencessuch as unexpected application beahviour or a crash. In particular thisissuecould result in up to 255 bytes of arbitrary private data from memory beingsentto the peer leading to a loss of confidentiality. However, onlyapplicationsthat directly call the SSL_select_next_proto function with a 0 length listofsupported client protocols are affected by this issue. This would normallyneverbe a valid scenario and is typically not under attacker control but mayoccur byaccident in the case of a configuration or programming error in the callingapplication.The OpenSSL API function SSL_select_next_proto is typically used by TLSapplications that support ALPN (Application Layer Protocol Negotiation) orNPN(Next Protocol Negotiation). NPN is older, was never standardised andis deprecated in favour of ALPN. We believe that ALPN is significantly morewidely deployed than NPN. The SSL_select_next_proto function accepts a listofprotocols from the server and a list of protocols from the client andreturnsthe first protocol that appears in the server list that also appears in theclient list. In the case of no overlap between the two lists it returns thefirst item in the client list. In either case it will signal whether anoverlapbetween the two lists was found. In the case where SSL_select_next_proto iscalled with a zero length client list it fails to notice this condition andreturns the memory immediately following the client list pointer (andreportsthat there was no overlap in the lists).This function is typically called from a server side application callbackforALPN or a client side application callback for NPN. In the case of ALPN thelistof protocols supplied by the client is guaranteed by libssl to never bezero inlength. The list of server protocols comes from the application and shouldnevernormally be expected to be of zero length. In this case if theSSL_select_next_proto function has been called as expected (with the listsupplied by the client passed in the client/client_len parameters), thentheapplication will not be vulnerable to this issue. If the application hasaccidentally been configured with a zero length server list, and hasaccidentally passed that zero length server list in the client/client_lenparameters, and has additionally failed to correctly handle a \"no overlap\"response (which would normally result in a handshake failure in ALPN) thenitwill be vulnerable to this problem.In the case of NPN, the protocol permits the client to opportunisticallyselecta protocol when there is no overlap. OpenSSL returns the first clientprotocolin the no overlap case in support of this. The list of client protocolscomesfrom the application and should never normally be expected to be of zerolength.However if the SSL_select_next_proto function is accidentally called with aclient_len of 0 then an invalid memory pointer will be returned instead. Iftheapplication uses this output as the opportunistic protocol then the loss ofconfidentiality will occur.This issue has been assessed as Low severity because applications are mostlikely to be vulnerable if they are using NPN instead of ALPN - but NPN isnotwidely used. It also requires an application configuration or programmingerror.Finally, this issue would not typically be under attacker control makingactiveexploitation unlikely.The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.Due to the low severity of this issue we are not issuing new releases ofOpenSSL at this time. The fix will be included in the next releases whentheybecome available.\n\n    Update Instructions:\n\n    Run `sudo pro fix CVE-2024-5535` to fix the vulnerability. The problem can be corrected\n    by updating your system to the following package versions:\n\nlibssl3 - 3.0.2-0ubuntu1.17\nopenssl - 3.0.2-0ubuntu1.17\nNo subscription required",
		"affected": {
			"family": "unix",
			"platform": "Ubuntu 22.04 FIPS Compliant"
		},
		"reference": {
			"source": "CVE",
			"ref_id": "CVE-2024-5535",
			"ref_url": "https://www.cve.org/CVERecord?id=CVE-2024-5535"
		},
		"advisory": {
			"severity": "Low",
			"rights": "Copyright (C) 2024 Canonical Ltd.",
			"public_date": "2024-06-27 11:15:00 UTC",
			"cve": {
				"text": "CVE-2024-5535",
				"href": "https://ubuntu.com/security/CVE-2024-5535",
				"public": "20240627"
			},
			"public_date_at_usn": "2024-06-27 11:15:00 UTC",
			"ref": [
				"https://ubuntu.com/security/notices/USN-6937-1"
			]
		}
	},
	"notes": {},
	"criteria": {
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:com.ubuntu.jammy:tst:202425110000000",
						"comment": "openssl package in jammy was vulnerable but has been fixed (note: '3.0.2-0ubuntu1.17')."
					},
					{
						"test_ref": "oval:com.ubuntu.jammy:tst:201915630000010",
						"comment": "nodejs package in jammy is affected and needs fixing."
					},
					{
						"test_ref": "oval:com.ubuntu.jammy:tst:202137120000000",
						"comment": "edk2 package in jammy is affected and may need fixing."
					}
				]
			}
		]
	}
}
